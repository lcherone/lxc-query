{
    "docs": [
        {
            "location": "/",
            "text": "A Node.js LXD client which uses your local instance of LXD and \nlxc query\n to manage your local or remote LXD servers.\n\n\nYou must be using >= LXD 2.17\n\n\nInstall\n\n\nRequire this package with npm using the following command:\n\n\n$ npm i lxc-query\n\n\n\n\nUsage\n\n\nEssentially you can do any LXD operation with the single \nlxc.query\n method, or you can use the helper methods which cover all the LXD endpoints (see side menu).\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote and endpoint\n\n\nlocal\n\n\n\n\n\n\nrest method\n\n\nstring\n\n\ne.g GET, POST, DELETE, PUT, PATCH\n\n\nGET\n\n\n\n\n\n\npayload\n\n\nobject | json string\n\n\nRest json payload\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nPre-resolve mutation function\n\n\n\n\n\n\n\n\n\n\nconst lxc = require('lxc-query')\n\nlxc.query('remote:/1.0', 'GET', {}).then(response => {\n    console.log(response)\n})\n\n\n\n\nCheck out the LXD \nRESTapi\n, for more information. \n\n\nContributing\n\n\nPlease see \nCONTRIBUTING\n for details.\n\n\nCredits\n\n\n\n\nLawrence Cherone\n\n\nAll Contributors\n\n\n\n\nLicense\n\n\nThe MIT License (MIT). Please see \nLicense File\n for more information.\n\n\nLinks\n\n\nCheck out \nLXD-UI\n - A simple easy to use GUI for your local LXD server.",
            "title": "Home"
        },
        {
            "location": "/#install",
            "text": "Require this package with npm using the following command:  $ npm i lxc-query",
            "title": "Install"
        },
        {
            "location": "/#usage",
            "text": "Essentially you can do any LXD operation with the single  lxc.query  method, or you can use the helper methods which cover all the LXD endpoints (see side menu).  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote and endpoint  local    rest method  string  e.g GET, POST, DELETE, PUT, PATCH  GET    payload  object | json string  Rest json payload     mutator  function  Pre-resolve mutation function      const lxc = require('lxc-query')\n\nlxc.query('remote:/1.0', 'GET', {}).then(response => {\n    console.log(response)\n})  Check out the LXD  RESTapi , for more information.",
            "title": "Usage"
        },
        {
            "location": "/#contributing",
            "text": "Please see  CONTRIBUTING  for details.",
            "title": "Contributing"
        },
        {
            "location": "/#credits",
            "text": "Lawrence Cherone  All Contributors",
            "title": "Credits"
        },
        {
            "location": "/#license",
            "text": "The MIT License (MIT). Please see  License File  for more information.",
            "title": "License"
        },
        {
            "location": "/#links",
            "text": "Check out  LXD-UI  - A simple easy to use GUI for your local LXD server.",
            "title": "Links"
        },
        {
            "location": "/server/",
            "text": "Helper methods for server.\n\n\nInfo\n\n\nGet server information.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\n\n\nlxc.info('local').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    api_extensions: [\n        'storage_zfs_remove_snapshots',\n        'container_host_shutdown_timeout',\n        'container_stop_priority',\n        'container_syscall_filtering',\n        'auth_pki',\n        'container_last_used_at',\n        'etag',\n        'patch',\n        'usb_devices',\n        'https_allowed_credentials',\n        'image_compression_algorithm',\n        'directory_manipulation',\n        'container_cpu_time',\n        'storage_zfs_use_refquota',\n        'storage_lvm_mount_options',\n        'network',\n        'profile_usedby',\n        'container_push',\n        'container_exec_recording',\n        'certificate_update',\n        'container_exec_signal_handling',\n        'gpu_devices',\n        'container_image_properties',\n        'migration_progress',\n        'id_map',\n        'network_firewall_filtering',\n        'network_routes',\n        'storage',\n        'file_delete',\n        'file_append',\n        'network_dhcp_expiry',\n        'storage_lvm_vg_rename',\n        'storage_lvm_thinpool_rename',\n        'network_vlan',\n        'image_create_aliases',\n        'container_stateless_copy',\n        'container_only_migration',\n        'storage_zfs_clone_copy',\n        'unix_device_rename',\n        'storage_lvm_use_thinpool',\n        'storage_rsync_bwlimit',\n        'network_vxlan_interface',\n        'storage_btrfs_mount_options',\n        'entity_description',\n        'image_force_refresh',\n        'storage_lvm_lv_resizing',\n        'id_map_base',\n        'file_symlinks',\n        'container_push_target',\n        'network_vlan_physical',\n        'storage_images_delete',\n        'container_edit_metadata',\n        'container_snapshot_stateful_migration',\n        'storage_driver_ceph',\n        'storage_ceph_user_name',\n        'resource_limits',\n        'storage_volatile_initial_source',\n        'storage_ceph_force_osd_reuse',\n        'storage_block_filesystem_btrfs',\n        'resources',\n        'kernel_limits',\n        'storage_api_volume_rename',\n        'macaroon_authentication',\n        'network_sriov',\n        'console',\n        'restrict_devlxd',\n        'migration_pre_copy',\n        'infiniband',\n        'maas_network',\n        'devlxd_events',\n        'proxy',\n        'network_dhcp_gateway',\n        'file_get_symlink',\n        'network_leases',\n        'unix_device_hotplug',\n        'storage_api_local_volume_handling',\n        'operation_description',\n        'clustering',\n        'event_lifecycle',\n        'storage_api_remote_volume_handling',\n        'nvidia_runtime'\n    ],\n    api_status: 'stable',\n    api_version: '1.0',\n    auth: 'trusted',\n    auth_methods: [\n        'tls'\n    ],\n    config: {},\n    environment: {\n        addresses: [],\n        architectures: [\n            'x86_64',\n            'i686'\n        ],\n        certificate: '-----BEGIN CERTIFICATE-----Snip-----END CERTIFICATE-----\\n',\n        certificate_fingerprint: 'dc32c2ec49a7a234762fc4be670e7e72f8d156a1w0cf1a1d216e9abcc594f61d',\n        driver: 'lxc',\n        driver_version: '3.0.0',\n        kernel: 'Linux',\n        kernel_architecture: 'x86_64',\n        kernel_version: '4.13.0-38-generic',\n        server: 'lxd',\n        server_clustered: false,\n        server_name: 'my-lxd-server',\n        server_pid: 906,\n        server_version: '3.0.0',\n        storage: 'zfs',\n        storage_version: '1'\n    },\n    public: false\n}\n\n\n\n\nReplace\n\n\nReplaces the server configuration or other properties.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nThe server options\n\n\n\n\n\n\n\n\n\n\nReplaces any existing config with the provided one.\n\n\nlxc.replace('local', {\n    \"config\": {\n        \"core.trust_password\": \"my-new-password\",\n        \"core.https_address\": \"[::]:8443\"\n    }\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nUpdate\n\n\nUpdates the server configuration or other properties.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nThe server options\n\n\n\n\n\n\n\n\n\n\nUpdates only the listed keys, rest remain intact.\n\n\nlxc.update('local', {\n    \"config\": {\n        \"core.trust_password\": \"my-new-password\",\n        \"core.https_address\": \"[::]:8443\"\n    }\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nResources\n\n\nGet information about the resources available to the LXD server.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\n\n\nlxc.server.resources('local').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    \"cpu\": {\n        \"sockets\": [\n            {\n                \"cores\": 6,\n                \"frequency\": 3700,\n                \"frequency_turbo\": 4700,\n                \"name\": \"Intel\",\n                \"threads\": 12,\n                \"vendor\": \"Intel Core i7-8700K\"\n            }\n        ],\n        \"total\": 6\n    },\n    \"memory\": {\n        \"total\": 126590324224,\n        \"used\": 1426169856\n    },\n    \"pool\": {\n        \"inodes\": {\n            \"total\": 0,\n            \"used\": 0\n        },\n        \"space\": {\n            \"total\": 0\n        }\n    }\n}\n\n\n\n\nRemotes\n\n\nGet currently defined remotes. (only works with local)\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nNone\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlxc.server.remotes().then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n[\n    'images',\n    'local',\n    'ubuntu',\n    'ubuntu-daily'\n]\n\n\n\n\nLocal\n\n\nAllows you to execute local exec commands.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ncommand\n\n\nstring\n\n\nShell command to run\n\n\n\n\n\n\n\n\n\n\nlxc.local('lxc list').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n+------------------+---------+-----------------------+------+------------+-----------+\n|       NAME       |  STATE  |         IPV4          | IPV6 |    TYPE    | SNAPSHOTS |\n+------------------+---------+-----------------------+------+------------+-----------+\n| my-container     | STOPPED |                       |      | EPHEMERAL  | 0         |\n+------------------+---------+-----------------------+------+------------+-----------+",
            "title": "Server"
        },
        {
            "location": "/server/#info",
            "text": "Get server information.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local     lxc.info('local').then(response => {\n    console.log(response)\n})  Response  {\n    api_extensions: [\n        'storage_zfs_remove_snapshots',\n        'container_host_shutdown_timeout',\n        'container_stop_priority',\n        'container_syscall_filtering',\n        'auth_pki',\n        'container_last_used_at',\n        'etag',\n        'patch',\n        'usb_devices',\n        'https_allowed_credentials',\n        'image_compression_algorithm',\n        'directory_manipulation',\n        'container_cpu_time',\n        'storage_zfs_use_refquota',\n        'storage_lvm_mount_options',\n        'network',\n        'profile_usedby',\n        'container_push',\n        'container_exec_recording',\n        'certificate_update',\n        'container_exec_signal_handling',\n        'gpu_devices',\n        'container_image_properties',\n        'migration_progress',\n        'id_map',\n        'network_firewall_filtering',\n        'network_routes',\n        'storage',\n        'file_delete',\n        'file_append',\n        'network_dhcp_expiry',\n        'storage_lvm_vg_rename',\n        'storage_lvm_thinpool_rename',\n        'network_vlan',\n        'image_create_aliases',\n        'container_stateless_copy',\n        'container_only_migration',\n        'storage_zfs_clone_copy',\n        'unix_device_rename',\n        'storage_lvm_use_thinpool',\n        'storage_rsync_bwlimit',\n        'network_vxlan_interface',\n        'storage_btrfs_mount_options',\n        'entity_description',\n        'image_force_refresh',\n        'storage_lvm_lv_resizing',\n        'id_map_base',\n        'file_symlinks',\n        'container_push_target',\n        'network_vlan_physical',\n        'storage_images_delete',\n        'container_edit_metadata',\n        'container_snapshot_stateful_migration',\n        'storage_driver_ceph',\n        'storage_ceph_user_name',\n        'resource_limits',\n        'storage_volatile_initial_source',\n        'storage_ceph_force_osd_reuse',\n        'storage_block_filesystem_btrfs',\n        'resources',\n        'kernel_limits',\n        'storage_api_volume_rename',\n        'macaroon_authentication',\n        'network_sriov',\n        'console',\n        'restrict_devlxd',\n        'migration_pre_copy',\n        'infiniband',\n        'maas_network',\n        'devlxd_events',\n        'proxy',\n        'network_dhcp_gateway',\n        'file_get_symlink',\n        'network_leases',\n        'unix_device_hotplug',\n        'storage_api_local_volume_handling',\n        'operation_description',\n        'clustering',\n        'event_lifecycle',\n        'storage_api_remote_volume_handling',\n        'nvidia_runtime'\n    ],\n    api_status: 'stable',\n    api_version: '1.0',\n    auth: 'trusted',\n    auth_methods: [\n        'tls'\n    ],\n    config: {},\n    environment: {\n        addresses: [],\n        architectures: [\n            'x86_64',\n            'i686'\n        ],\n        certificate: '-----BEGIN CERTIFICATE-----Snip-----END CERTIFICATE-----\\n',\n        certificate_fingerprint: 'dc32c2ec49a7a234762fc4be670e7e72f8d156a1w0cf1a1d216e9abcc594f61d',\n        driver: 'lxc',\n        driver_version: '3.0.0',\n        kernel: 'Linux',\n        kernel_architecture: 'x86_64',\n        kernel_version: '4.13.0-38-generic',\n        server: 'lxd',\n        server_clustered: false,\n        server_name: 'my-lxd-server',\n        server_pid: 906,\n        server_version: '3.0.0',\n        storage: 'zfs',\n        storage_version: '1'\n    },\n    public: false\n}",
            "title": "Info"
        },
        {
            "location": "/server/#replace",
            "text": "Replaces the server configuration or other properties.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    options  object  The server options      Replaces any existing config with the provided one.  lxc.replace('local', {\n    \"config\": {\n        \"core.trust_password\": \"my-new-password\",\n        \"core.https_address\": \"[::]:8443\"\n    }\n}).then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Replace"
        },
        {
            "location": "/server/#update",
            "text": "Updates the server configuration or other properties.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    options  object  The server options      Updates only the listed keys, rest remain intact.  lxc.update('local', {\n    \"config\": {\n        \"core.trust_password\": \"my-new-password\",\n        \"core.https_address\": \"[::]:8443\"\n    }\n}).then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Update"
        },
        {
            "location": "/server/#resources",
            "text": "Get information about the resources available to the LXD server.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local     lxc.server.resources('local').then(response => {\n    console.log(response)\n})  Response  {\n    \"cpu\": {\n        \"sockets\": [\n            {\n                \"cores\": 6,\n                \"frequency\": 3700,\n                \"frequency_turbo\": 4700,\n                \"name\": \"Intel\",\n                \"threads\": 12,\n                \"vendor\": \"Intel Core i7-8700K\"\n            }\n        ],\n        \"total\": 6\n    },\n    \"memory\": {\n        \"total\": 126590324224,\n        \"used\": 1426169856\n    },\n    \"pool\": {\n        \"inodes\": {\n            \"total\": 0,\n            \"used\": 0\n        },\n        \"space\": {\n            \"total\": 0\n        }\n    }\n}",
            "title": "Resources"
        },
        {
            "location": "/server/#remotes",
            "text": "Get currently defined remotes. (only works with local)  Parameters & Call     Parameter  Type  Description  Default      None        lxc.server.remotes().then(response => {\n    console.log(response)\n})  Response  [\n    'images',\n    'local',\n    'ubuntu',\n    'ubuntu-daily'\n]",
            "title": "Remotes"
        },
        {
            "location": "/server/#local",
            "text": "Allows you to execute local exec commands.  Parameters & Call     Parameter  Type  Description  Default      command  string  Shell command to run      lxc.local('lxc list').then(response => {\n    console.log(response)\n})  Response  +------------------+---------+-----------------------+------+------------+-----------+\n|       NAME       |  STATE  |         IPV4          | IPV6 |    TYPE    | SNAPSHOTS |\n+------------------+---------+-----------------------+------+------------+-----------+\n| my-container     | STOPPED |                       |      | EPHEMERAL  | 0         |\n+------------------+---------+-----------------------+------+------------+-----------+",
            "title": "Local"
        },
        {
            "location": "/certificates/",
            "text": "Helper methods for certificate operations.\n\n\nList\n\n\nList client certificates.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.certificates.list('local').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n[\n    \"/1.0/certificates/33c50480212ea93c0afbb8125c280b1a66445cac64706066ade30851f54cc8bx\"\n]\n\n\n\n\nAdd\n\n\nAdd client certificate.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nCertificate options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.certificates.add('local', {\n    \"type\": \"client\",\n    \"certificate\": \"PEM certificate\",\n    \"name\": \"foo\",\n    \"password\": \"server-trust-password\"\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nInfo\n\n\nGet certificate information.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nfingerprint\n\n\nstring\n\n\nCertificate fingerprint\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.certificates.info('local', '33c50480212ea93c0afbb8125c280b1a66445cac64706066ade30851f54cc8bx').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    \"certificate\": \"-----BEGIN CERTIFICATE-----\\n snip \\n-----END CERTIFICATE-----\\n\",\n    \"fingerprint\": \"33c50480212ea93c0afbb8125c280b1a66445cac64706066ade30851f54cc8bx\",\n    \"name\": \"\",\n    \"type\": \"client\"\n}\n\n\n\n\nReplace\n\n\nReplace certificate properties.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nfingerprint\n\n\nstring\n\n\nCertificate fingerprint\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nCertificate options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.certificates.replace('local', '33c50480212ea93c0afbb8125c280b1a66445cac64706066ade30851f54cc8bx', {\n    \"type\": \"client\",\n    \"name\": \"bar\"\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nUpdate\n\n\nUpdate certificate properties.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nfingerprint\n\n\nstring\n\n\nCertificate fingerprint\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nCertificate options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.certificates.replace('local', '33c50480212ea93c0afbb8125c280b1a66445cac64706066ade30851f54cc8bx', {\n    \"name\": \"baz\"\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nDelete\n\n\nDelete a client certificate.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nfingerprint\n\n\nstring\n\n\nCertificate fingerprint\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.certificates.delete('local', '33c50480212ea93c0afbb8125c280b1a66445cac64706066ade30851f54cc8bx').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}",
            "title": "Certificates"
        },
        {
            "location": "/certificates/#list",
            "text": "List client certificates.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    mutator  function  Mutation function      lxc.certificates.list('local').then(response => {\n    console.log(response)\n})  Response  [\n    \"/1.0/certificates/33c50480212ea93c0afbb8125c280b1a66445cac64706066ade30851f54cc8bx\"\n]",
            "title": "List"
        },
        {
            "location": "/certificates/#add",
            "text": "Add client certificate.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    options  object  Certificate options     mutator  function  Mutation function      lxc.certificates.add('local', {\n    \"type\": \"client\",\n    \"certificate\": \"PEM certificate\",\n    \"name\": \"foo\",\n    \"password\": \"server-trust-password\"\n}).then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Add"
        },
        {
            "location": "/certificates/#info",
            "text": "Get certificate information.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    fingerprint  string  Certificate fingerprint     mutator  function  Mutation function      lxc.certificates.info('local', '33c50480212ea93c0afbb8125c280b1a66445cac64706066ade30851f54cc8bx').then(response => {\n    console.log(response)\n})  Response  {\n    \"certificate\": \"-----BEGIN CERTIFICATE-----\\n snip \\n-----END CERTIFICATE-----\\n\",\n    \"fingerprint\": \"33c50480212ea93c0afbb8125c280b1a66445cac64706066ade30851f54cc8bx\",\n    \"name\": \"\",\n    \"type\": \"client\"\n}",
            "title": "Info"
        },
        {
            "location": "/certificates/#replace",
            "text": "Replace certificate properties.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    fingerprint  string  Certificate fingerprint     options  object  Certificate options     mutator  function  Mutation function      lxc.certificates.replace('local', '33c50480212ea93c0afbb8125c280b1a66445cac64706066ade30851f54cc8bx', {\n    \"type\": \"client\",\n    \"name\": \"bar\"\n}).then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Replace"
        },
        {
            "location": "/certificates/#update",
            "text": "Update certificate properties.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    fingerprint  string  Certificate fingerprint     options  object  Certificate options     mutator  function  Mutation function      lxc.certificates.replace('local', '33c50480212ea93c0afbb8125c280b1a66445cac64706066ade30851f54cc8bx', {\n    \"name\": \"baz\"\n}).then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Update"
        },
        {
            "location": "/certificates/#delete",
            "text": "Delete a client certificate.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    fingerprint  string  Certificate fingerprint     mutator  function  Mutation function      lxc.certificates.delete('local', '33c50480212ea93c0afbb8125c280b1a66445cac64706066ade30851f54cc8bx').then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Delete"
        },
        {
            "location": "/containers/",
            "text": "Helper methods for container operations.\n\n\nList\n\n\nList containers on remote.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n// apply no mutation to the response\nlxc.containers.list('local').then(response => {\n    // [ '/1.0/containers/my-container' ]\n    console.log(response)\n})\n\n// apply stripEndpoint on response\nlxc.containers.list('local', response => lxc.containers.stripEndpoint(response)).then(response => {\n    // [ 'my-container' ]\n    console.log(response)\n})\n\n// or you could write your own\nlxc.containers.list('local', response => {\n    let ret = []\n    response.forEach(value => {\n      ret.push(value.replace(lxc.containers.baseEndpoint + '/', ''))\n    })\n    return ret\n}).then(response => {\n    // [ 'my-container' ]\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n[ \n    '/1.0/containers/my-container'\n]\n\n\n\n\nInfo\n\n\nGet container information.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.containers.info('local', 'my-container').then(response => {\n    console.log(response);\n})\n\n\n\n\nResponse\n\n\n{\n    \"architecture\": \"x86_64\",\n    \"config\": {\n        \"image.architecture\": \"amd64\",\n        \"image.description\": \"ubuntu 16.04 LTS amd64 (release) (20180405)\",\n        \"image.label\": \"release\",\n        \"image.os\": \"ubuntu\",\n        \"image.release\": \"xenial\",\n        \"image.serial\": \"20180405\",\n        \"image.version\": \"16.04\",\n        \"volatile.base_image\": \"be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a\",\n        \"volatile.eth0.hwaddr\": \"00:16:3e:fb:89:0a\",\n        \"volatile.idmap.base\": \"0\",\n        \"volatile.idmap.next\": \"[{\\\"Isuid\\\":true,\\\"Isgid\\\":false,\\\"Hostid\\\":100000,\\\"Nsid\\\":0,\\\"Maprange\\\":65536},{\\\"Isuid\\\":false,\\\"Isgid\\\":true,\\\"Hostid\\\":100000,\\\"Nsid\\\":0,\\\"Maprange\\\":65536}]\",\n        \"volatile.last_state.idmap\": \"[{\\\"Isuid\\\":true,\\\"Isgid\\\":false,\\\"Hostid\\\":100000,\\\"Nsid\\\":0,\\\"Maprange\\\":65536},{\\\"Isuid\\\":false,\\\"Isgid\\\":true,\\\"Hostid\\\":100000,\\\"Nsid\\\":0,\\\"Maprange\\\":65536}]\",\n        \"volatile.last_state.power\": \"RUNNING\"\n    },\n    \"created_at\": \"2018-04-08T15:41:08Z\",\n    \"description\": \"\",\n    \"devices\": {},\n    \"ephemeral\": false,\n    \"expanded_config\": {\n        \"image.architecture\": \"amd64\",\n        \"image.description\": \"ubuntu 16.04 LTS amd64 (release) (20180405)\",\n        \"image.label\": \"release\",\n        \"image.os\": \"ubuntu\",\n        \"image.release\": \"xenial\",\n        \"image.serial\": \"20180405\",\n        \"image.version\": \"16.04\",\n        \"volatile.base_image\": \"be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a\",\n        \"volatile.eth0.hwaddr\": \"00:16:3e:fb:89:0a\",\n        \"volatile.idmap.base\": \"0\",\n        \"volatile.idmap.next\": \"[{\\\"Isuid\\\":true,\\\"Isgid\\\":false,\\\"Hostid\\\":100000,\\\"Nsid\\\":0,\\\"Maprange\\\":65536},{\\\"Isuid\\\":false,\\\"Isgid\\\":true,\\\"Hostid\\\":100000,\\\"Nsid\\\":0,\\\"Maprange\\\":65536}]\",\n        \"volatile.last_state.idmap\": \"[{\\\"Isuid\\\":true,\\\"Isgid\\\":false,\\\"Hostid\\\":100000,\\\"Nsid\\\":0,\\\"Maprange\\\":65536},{\\\"Isuid\\\":false,\\\"Isgid\\\":true,\\\"Hostid\\\":100000,\\\"Nsid\\\":0,\\\"Maprange\\\":65536}]\",\n        \"volatile.last_state.power\": \"RUNNING\"\n    },\n    \"expanded_devices\": {\n        \"eth0\": {\n            \"name\": \"eth0\",\n            \"nictype\": \"bridged\",\n            \"parent\": \"lxdbr0\",\n            \"type\": \"nic\"\n        },\n        \"root\": {\n            \"path\": \"/\",\n            \"pool\": \"default\",\n            \"type\": \"disk\"\n        }\n    },\n    \"last_used_at\": \"2018-04-08T20:09:53Z\",\n    \"location\": \"\",\n    \"name\": \"my-container\",\n    \"profiles\": [\n        \"default\"\n    ],\n    \"stateful\": false,\n    \"status\": \"Running\",\n    \"status_code\": 103\n}\n\n\n\n\nGet State\n\n\nGet the state of a container.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nThe container name\n\n\n\n\n\n\n\n\n\n\nlxc.containers.getState('local', 'container-name').then(response => {\n    console.log(response);\n})\n\n\n\n\nResponse\n\n\n{\n    \"cpu\": {\n        \"usage\": 15159435138\n    },\n    \"disk\": {},\n    \"memory\": {\n        \"swap_usage\": 0,\n        \"swap_usage_peak\": 0,\n        \"usage\": 239001600,\n        \"usage_peak\": 314175488\n    },\n    \"network\": {\n        \"eth0\": {\n            \"addresses\": [\n                {\n                    \"address\": \"10.189.110.190\",\n                    \"family\": \"inet\",\n                    \"netmask\": \"24\",\n                    \"scope\": \"global\"\n                },\n                {\n                    \"address\": \"fe80::216:3eff:fefb:890a\",\n                    \"family\": \"inet6\",\n                    \"netmask\": \"64\",\n                    \"scope\": \"link\"\n                }\n            ],\n            \"counters\": {\n                \"bytes_received\": 26351929,\n                \"bytes_sent\": 706569,\n                \"packets_received\": 18810,\n                \"packets_sent\": 10095\n            },\n            \"host_name\": \"vethQGS6S6\",\n            \"hwaddr\": \"00:16:3e:fb:89:0a\",\n            \"mtu\": 1500,\n            \"state\": \"up\",\n            \"type\": \"broadcast\"\n        },\n        \"lo\": {\n            \"addresses\": [\n                {\n                    \"address\": \"127.0.0.1\",\n                    \"family\": \"inet\",\n                    \"netmask\": \"8\",\n                    \"scope\": \"local\"\n                },\n                {\n                    \"address\": \"::1\",\n                    \"family\": \"inet6\",\n                    \"netmask\": \"128\",\n                    \"scope\": \"local\"\n                }\n            ],\n            \"counters\": {\n                \"bytes_received\": 0,\n                \"bytes_sent\": 0,\n                \"packets_received\": 0,\n                \"packets_sent\": 0\n            },\n            \"host_name\": \"\",\n            \"hwaddr\": \"\",\n            \"mtu\": 65536,\n            \"state\": \"up\",\n            \"type\": \"loopback\"\n        }\n    },\n    \"pid\": 7156,\n    \"processes\": 30,\n    \"status\": \"Running\",\n    \"status_code\": 103\n}\n\n\n\n\nSet State\n\n\nSet the state of a container on remote, this allows for more flexibility then \ncalling the (start, stop, restart, freeze, unfreeze) methods below as you can set the options parameter.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nThe container name\n\n\n\n\n\n\n\n\noptions\n\n\nobject | json\n\n\nContainer state options\n\n\n\n\n\n\n\n\n\n\nlxc.containers.setState('local', 'container-name',  {\n    \"action\": \"stop\",  # State change action (stop, start, restart, freeze or unfreeze)\n    \"timeout\": 30,     # A timeout after which the state change is considered as failed\n    \"force\": true,     # Force the state change (currently only valid for stop and restart where it means killing the container)\n    \"stateful\": true   # Whether to store or restore runtime state before stopping or startiong (only valid for stop and start, defaults to false)\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    class: 'task',\n    created_at: '2018-04-08T16:37:36.511708398Z',\n    description: '[Stopping, Starting, Restarting, Freezing, Unfreezing] container',\n    err: '',\n    id: '4850b25b-3a9a-4666-acf6-9f2b4c25a236',\n    may_cancel: false,\n    metadata: null,\n    resources: {\n        containers: [\n            '/1.0/containers/my-container'\n        ]\n    },\n    status: 'Running',\n    status_code: 103,\n    updated_at: '2018-04-08T16:37:36.511708398Z'\n}\n\n\n\n\nReplace\n\n\nReplaces container configuration or restore snapshot.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nContainer options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.containers.replace('local', 'my-container', {\n    \"architecture\": \"x86_64\",\n    \"config\": {\n        \"limits.cpu\": \"4\",\n        \"volatile.base_image\": \"97d97a3d1d053840ca19c86cdd0596cf1be060c5157d31407f2a4f9f350c78cc\",\n        \"volatile.eth0.hwaddr\": \"00:16:3e:1c:94:38\"\n    },\n    \"devices\": {\n        \"rootfs\": {\n            \"path\": \"/\",\n            \"type\": \"disk\"\n        }\n    },\n    \"ephemeral\": true,\n    \"profiles\": [\n        \"default\"\n    ]\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nUpdate\n\n\nUpdate container configuration.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nContainer options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.containers.replace('local', 'my-container', {\n    \"config\": {\n        \"limits.cpu\": \"4\"\n    },\n    \"devices\": {\n        \"rootfs\": {\n            \"size\": \"5GB\"\n        }\n    },\n    \"ephemeral\": true\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nRename\n\n\nRename a container.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nnewName\n\n\nstring\n\n\nNew container name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.containers.rename('local', 'old-name', 'new-name').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nCreate\n\n\nCreate a container.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nThe container options\n\n\n\n\n\n\n\n\n\n\nFull container options can be found here: \nhttps://github.com/lxc/lxd/blob/master/doc/rest-api.md#post-1\n\n\nlxc.containers.create('local', {\n    \"name\": \"my-new-container\",\n    \"architecture\": \"x86_64\",\n    \"profiles\": [\"default\"],\n    \"ephemeral\": true,\n    \"config\": { \"limits.cpu\": \"2\" },\n    \"devices\": {},\n    \"source\": {\n        \"type\": \"image\",\n        \"fingerprint\": \"be7cec7c9489\"\n    }\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    \"class\": \"task\",\n    \"created_at\": \"2018-04-08T22:49:33.892947111Z\",\n    \"description\": \"Creating container\",\n    \"err\": \"\",\n    \"id\": \"cfd9cd81-a651-4b9b-bd89-4667cc51ad4b\",\n    \"may_cancel\": false,\n    \"metadata\": null,\n    \"resources\": {\n        \"containers\": [\n            \"/1.0/containers/my-new-container\"\n        ]\n    },\n    \"status\": \"Running\",\n    \"status_code\": 103,\n    \"updated_at\": \"2018-04-08T22:49:33.892947111Z\"\n}\n\n\n\n\nStart\n\n\nStart a container.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nThe container name\n\n\n\n\n\n\n\n\n\n\nlxc.containers.start('local', 'container-name').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    class: 'task',\n    created_at: '2018-04-08T16:37:36.511708398Z',\n    description: 'Starting container',\n    err: '',\n    id: '4850b25b-3a9a-4666-acf6-9f2b4c25a236',\n    may_cancel: false,\n    metadata: null,\n    resources: {\n        containers: [\n            '/1.0/containers/my-container'\n        ]\n    },\n    status: 'Running',\n    status_code: 103,\n    updated_at: '2018-04-08T16:37:36.511708398Z'\n}\n\n\n\n\nStop\n\n\nStop a container.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nThe container name\n\n\n\n\n\n\n\n\n\n\nlxc.containers.stop('local', 'container-name').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    class: 'task',\n    created_at: '2018-04-08T16:37:36.511708398Z',\n    description: 'Stopping container',\n    err: '',\n    id: '4850b25b-3a9a-4666-acf6-9f2b4c25a236',\n    may_cancel: false,\n    metadata: null,\n    resources: {\n        containers: [\n            '/1.0/containers/my-container'\n        ]\n    },\n    status: 'Running',\n    status_code: 103,\n    updated_at: '2018-04-08T16:37:36.511708398Z'\n}\n\n\n\n\nRestart\n\n\nRestart a container.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nThe container name\n\n\n\n\n\n\n\n\n\n\nlxc.containers.restart('local', 'container-name').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    class: 'task',\n    created_at: '2018-04-08T16:37:36.511708398Z',\n    description: 'Restarting container',\n    err: '',\n    id: '4850b25b-3a9a-4666-acf6-9f2b4c25a236',\n    may_cancel: false,\n    metadata: null,\n    resources: {\n        containers: [\n            '/1.0/containers/my-container'\n        ]\n    },\n    status: 'Running',\n    status_code: 103,\n    updated_at: '2018-04-08T16:37:36.511708398Z'\n}\n\n\n\n\nFreeze\n\n\nFreeze a container.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nThe container name\n\n\n\n\n\n\n\n\n\n\nlxc.containers.freeze('local', 'container-name').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    class: 'task',\n    created_at: '2018-04-08T16:37:36.511708398Z',\n    description: 'Freezing container',\n    err: '',\n    id: '4850b25b-3a9a-4666-acf6-9f2b4c25a236',\n    may_cancel: false,\n    metadata: null,\n    resources: {\n        containers: [\n            '/1.0/containers/my-container'\n        ]\n    },\n    status: 'Running',\n    status_code: 103,\n    updated_at: '2018-04-08T16:37:36.511708398Z'\n}\n\n\n\n\nUnfreeze\n\n\nUnfreeze a container.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nThe container name\n\n\n\n\n\n\n\n\n\n\nlxc.containers.unfreeze('local', 'container-name').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    class: 'task',\n    created_at: '2018-04-08T16:37:36.511708398Z',\n    description: 'Thawing container',\n    err: '',\n    id: '4850b25b-3a9a-4666-acf6-9f2b4c25a236',\n    may_cancel: false,\n    metadata: null,\n    resources: {\n        containers: [\n            '/1.0/containers/my-container'\n        ]\n    },\n    status: 'Running',\n    status_code: 103,\n    updated_at: '2018-04-08T16:37:36.511708398Z'\n}\n\n\n\n\nDelete\n\n\nDelete a container.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.containers.delete('local', 'container-name').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nExec\n\n\nRun a command in container.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nThe container options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.containers.exec('local', 'my-container', {\n    \"command\": [\"/bin/bash\"],\n    \"environment\": {},\n    \"wait-for-websocket\": false,\n    \"record-output\": false,\n    \"interactive\": false,\n    \"width\": 80,\n    \"height\": 25\n}).then(response => {\n    console.log(response);\n})\n\n\n\n\nResponse\n\n\n{\n    \"class\": \"task\",\n    \"created_at\": \"2018-04-16T01:58:34.642661556Z\",\n    \"description\": \"Executing command\",\n    \"err\": \"\",\n    \"id\": \"bff27d5c-f54c-4fb4-8956-60bcea56d074\",\n    \"may_cancel\": false,\n    \"metadata\": null,\n    \"resources\": {\n        \"containers\": [\n            \"/1.0/containers/my-container\"\n        ]\n    },\n    \"status\": \"Running\",\n    \"status_code\": 103,\n    \"updated_at\": \"2018-04-16T01:58:34.642661556Z\"\n}",
            "title": "Containers"
        },
        {
            "location": "/containers/#list",
            "text": "List containers on remote.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    mutator  function  Mutation function      // apply no mutation to the response\nlxc.containers.list('local').then(response => {\n    // [ '/1.0/containers/my-container' ]\n    console.log(response)\n})\n\n// apply stripEndpoint on response\nlxc.containers.list('local', response => lxc.containers.stripEndpoint(response)).then(response => {\n    // [ 'my-container' ]\n    console.log(response)\n})\n\n// or you could write your own\nlxc.containers.list('local', response => {\n    let ret = []\n    response.forEach(value => {\n      ret.push(value.replace(lxc.containers.baseEndpoint + '/', ''))\n    })\n    return ret\n}).then(response => {\n    // [ 'my-container' ]\n    console.log(response)\n})  Response  [ \n    '/1.0/containers/my-container'\n]",
            "title": "List"
        },
        {
            "location": "/containers/#info",
            "text": "Get container information.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Container name     mutator  function  Mutation function      lxc.containers.info('local', 'my-container').then(response => {\n    console.log(response);\n})  Response  {\n    \"architecture\": \"x86_64\",\n    \"config\": {\n        \"image.architecture\": \"amd64\",\n        \"image.description\": \"ubuntu 16.04 LTS amd64 (release) (20180405)\",\n        \"image.label\": \"release\",\n        \"image.os\": \"ubuntu\",\n        \"image.release\": \"xenial\",\n        \"image.serial\": \"20180405\",\n        \"image.version\": \"16.04\",\n        \"volatile.base_image\": \"be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a\",\n        \"volatile.eth0.hwaddr\": \"00:16:3e:fb:89:0a\",\n        \"volatile.idmap.base\": \"0\",\n        \"volatile.idmap.next\": \"[{\\\"Isuid\\\":true,\\\"Isgid\\\":false,\\\"Hostid\\\":100000,\\\"Nsid\\\":0,\\\"Maprange\\\":65536},{\\\"Isuid\\\":false,\\\"Isgid\\\":true,\\\"Hostid\\\":100000,\\\"Nsid\\\":0,\\\"Maprange\\\":65536}]\",\n        \"volatile.last_state.idmap\": \"[{\\\"Isuid\\\":true,\\\"Isgid\\\":false,\\\"Hostid\\\":100000,\\\"Nsid\\\":0,\\\"Maprange\\\":65536},{\\\"Isuid\\\":false,\\\"Isgid\\\":true,\\\"Hostid\\\":100000,\\\"Nsid\\\":0,\\\"Maprange\\\":65536}]\",\n        \"volatile.last_state.power\": \"RUNNING\"\n    },\n    \"created_at\": \"2018-04-08T15:41:08Z\",\n    \"description\": \"\",\n    \"devices\": {},\n    \"ephemeral\": false,\n    \"expanded_config\": {\n        \"image.architecture\": \"amd64\",\n        \"image.description\": \"ubuntu 16.04 LTS amd64 (release) (20180405)\",\n        \"image.label\": \"release\",\n        \"image.os\": \"ubuntu\",\n        \"image.release\": \"xenial\",\n        \"image.serial\": \"20180405\",\n        \"image.version\": \"16.04\",\n        \"volatile.base_image\": \"be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a\",\n        \"volatile.eth0.hwaddr\": \"00:16:3e:fb:89:0a\",\n        \"volatile.idmap.base\": \"0\",\n        \"volatile.idmap.next\": \"[{\\\"Isuid\\\":true,\\\"Isgid\\\":false,\\\"Hostid\\\":100000,\\\"Nsid\\\":0,\\\"Maprange\\\":65536},{\\\"Isuid\\\":false,\\\"Isgid\\\":true,\\\"Hostid\\\":100000,\\\"Nsid\\\":0,\\\"Maprange\\\":65536}]\",\n        \"volatile.last_state.idmap\": \"[{\\\"Isuid\\\":true,\\\"Isgid\\\":false,\\\"Hostid\\\":100000,\\\"Nsid\\\":0,\\\"Maprange\\\":65536},{\\\"Isuid\\\":false,\\\"Isgid\\\":true,\\\"Hostid\\\":100000,\\\"Nsid\\\":0,\\\"Maprange\\\":65536}]\",\n        \"volatile.last_state.power\": \"RUNNING\"\n    },\n    \"expanded_devices\": {\n        \"eth0\": {\n            \"name\": \"eth0\",\n            \"nictype\": \"bridged\",\n            \"parent\": \"lxdbr0\",\n            \"type\": \"nic\"\n        },\n        \"root\": {\n            \"path\": \"/\",\n            \"pool\": \"default\",\n            \"type\": \"disk\"\n        }\n    },\n    \"last_used_at\": \"2018-04-08T20:09:53Z\",\n    \"location\": \"\",\n    \"name\": \"my-container\",\n    \"profiles\": [\n        \"default\"\n    ],\n    \"stateful\": false,\n    \"status\": \"Running\",\n    \"status_code\": 103\n}",
            "title": "Info"
        },
        {
            "location": "/containers/#get-state",
            "text": "Get the state of a container.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  The container name      lxc.containers.getState('local', 'container-name').then(response => {\n    console.log(response);\n})  Response  {\n    \"cpu\": {\n        \"usage\": 15159435138\n    },\n    \"disk\": {},\n    \"memory\": {\n        \"swap_usage\": 0,\n        \"swap_usage_peak\": 0,\n        \"usage\": 239001600,\n        \"usage_peak\": 314175488\n    },\n    \"network\": {\n        \"eth0\": {\n            \"addresses\": [\n                {\n                    \"address\": \"10.189.110.190\",\n                    \"family\": \"inet\",\n                    \"netmask\": \"24\",\n                    \"scope\": \"global\"\n                },\n                {\n                    \"address\": \"fe80::216:3eff:fefb:890a\",\n                    \"family\": \"inet6\",\n                    \"netmask\": \"64\",\n                    \"scope\": \"link\"\n                }\n            ],\n            \"counters\": {\n                \"bytes_received\": 26351929,\n                \"bytes_sent\": 706569,\n                \"packets_received\": 18810,\n                \"packets_sent\": 10095\n            },\n            \"host_name\": \"vethQGS6S6\",\n            \"hwaddr\": \"00:16:3e:fb:89:0a\",\n            \"mtu\": 1500,\n            \"state\": \"up\",\n            \"type\": \"broadcast\"\n        },\n        \"lo\": {\n            \"addresses\": [\n                {\n                    \"address\": \"127.0.0.1\",\n                    \"family\": \"inet\",\n                    \"netmask\": \"8\",\n                    \"scope\": \"local\"\n                },\n                {\n                    \"address\": \"::1\",\n                    \"family\": \"inet6\",\n                    \"netmask\": \"128\",\n                    \"scope\": \"local\"\n                }\n            ],\n            \"counters\": {\n                \"bytes_received\": 0,\n                \"bytes_sent\": 0,\n                \"packets_received\": 0,\n                \"packets_sent\": 0\n            },\n            \"host_name\": \"\",\n            \"hwaddr\": \"\",\n            \"mtu\": 65536,\n            \"state\": \"up\",\n            \"type\": \"loopback\"\n        }\n    },\n    \"pid\": 7156,\n    \"processes\": 30,\n    \"status\": \"Running\",\n    \"status_code\": 103\n}",
            "title": "Get State"
        },
        {
            "location": "/containers/#set-state",
            "text": "Set the state of a container on remote, this allows for more flexibility then \ncalling the (start, stop, restart, freeze, unfreeze) methods below as you can set the options parameter.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  The container name     options  object | json  Container state options      lxc.containers.setState('local', 'container-name',  {\n    \"action\": \"stop\",  # State change action (stop, start, restart, freeze or unfreeze)\n    \"timeout\": 30,     # A timeout after which the state change is considered as failed\n    \"force\": true,     # Force the state change (currently only valid for stop and restart where it means killing the container)\n    \"stateful\": true   # Whether to store or restore runtime state before stopping or startiong (only valid for stop and start, defaults to false)\n}).then(response => {\n    console.log(response)\n})  Response  {\n    class: 'task',\n    created_at: '2018-04-08T16:37:36.511708398Z',\n    description: '[Stopping, Starting, Restarting, Freezing, Unfreezing] container',\n    err: '',\n    id: '4850b25b-3a9a-4666-acf6-9f2b4c25a236',\n    may_cancel: false,\n    metadata: null,\n    resources: {\n        containers: [\n            '/1.0/containers/my-container'\n        ]\n    },\n    status: 'Running',\n    status_code: 103,\n    updated_at: '2018-04-08T16:37:36.511708398Z'\n}",
            "title": "Set State"
        },
        {
            "location": "/containers/#replace",
            "text": "Replaces container configuration or restore snapshot.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Container name     options  object  Container options     mutator  function  Mutation function      lxc.containers.replace('local', 'my-container', {\n    \"architecture\": \"x86_64\",\n    \"config\": {\n        \"limits.cpu\": \"4\",\n        \"volatile.base_image\": \"97d97a3d1d053840ca19c86cdd0596cf1be060c5157d31407f2a4f9f350c78cc\",\n        \"volatile.eth0.hwaddr\": \"00:16:3e:1c:94:38\"\n    },\n    \"devices\": {\n        \"rootfs\": {\n            \"path\": \"/\",\n            \"type\": \"disk\"\n        }\n    },\n    \"ephemeral\": true,\n    \"profiles\": [\n        \"default\"\n    ]\n}).then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Replace"
        },
        {
            "location": "/containers/#update",
            "text": "Update container configuration.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Container name     options  object  Container options     mutator  function  Mutation function      lxc.containers.replace('local', 'my-container', {\n    \"config\": {\n        \"limits.cpu\": \"4\"\n    },\n    \"devices\": {\n        \"rootfs\": {\n            \"size\": \"5GB\"\n        }\n    },\n    \"ephemeral\": true\n}).then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Update"
        },
        {
            "location": "/containers/#rename",
            "text": "Rename a container.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Container name     newName  string  New container name     mutator  function  Mutation function      lxc.containers.rename('local', 'old-name', 'new-name').then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Rename"
        },
        {
            "location": "/containers/#create",
            "text": "Create a container.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    options  object  The container options      Full container options can be found here:  https://github.com/lxc/lxd/blob/master/doc/rest-api.md#post-1  lxc.containers.create('local', {\n    \"name\": \"my-new-container\",\n    \"architecture\": \"x86_64\",\n    \"profiles\": [\"default\"],\n    \"ephemeral\": true,\n    \"config\": { \"limits.cpu\": \"2\" },\n    \"devices\": {},\n    \"source\": {\n        \"type\": \"image\",\n        \"fingerprint\": \"be7cec7c9489\"\n    }\n}).then(response => {\n    console.log(response)\n})  Response  {\n    \"class\": \"task\",\n    \"created_at\": \"2018-04-08T22:49:33.892947111Z\",\n    \"description\": \"Creating container\",\n    \"err\": \"\",\n    \"id\": \"cfd9cd81-a651-4b9b-bd89-4667cc51ad4b\",\n    \"may_cancel\": false,\n    \"metadata\": null,\n    \"resources\": {\n        \"containers\": [\n            \"/1.0/containers/my-new-container\"\n        ]\n    },\n    \"status\": \"Running\",\n    \"status_code\": 103,\n    \"updated_at\": \"2018-04-08T22:49:33.892947111Z\"\n}",
            "title": "Create"
        },
        {
            "location": "/containers/#start",
            "text": "Start a container.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  The container name      lxc.containers.start('local', 'container-name').then(response => {\n    console.log(response)\n})  Response  {\n    class: 'task',\n    created_at: '2018-04-08T16:37:36.511708398Z',\n    description: 'Starting container',\n    err: '',\n    id: '4850b25b-3a9a-4666-acf6-9f2b4c25a236',\n    may_cancel: false,\n    metadata: null,\n    resources: {\n        containers: [\n            '/1.0/containers/my-container'\n        ]\n    },\n    status: 'Running',\n    status_code: 103,\n    updated_at: '2018-04-08T16:37:36.511708398Z'\n}",
            "title": "Start"
        },
        {
            "location": "/containers/#stop",
            "text": "Stop a container.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  The container name      lxc.containers.stop('local', 'container-name').then(response => {\n    console.log(response)\n})  Response  {\n    class: 'task',\n    created_at: '2018-04-08T16:37:36.511708398Z',\n    description: 'Stopping container',\n    err: '',\n    id: '4850b25b-3a9a-4666-acf6-9f2b4c25a236',\n    may_cancel: false,\n    metadata: null,\n    resources: {\n        containers: [\n            '/1.0/containers/my-container'\n        ]\n    },\n    status: 'Running',\n    status_code: 103,\n    updated_at: '2018-04-08T16:37:36.511708398Z'\n}",
            "title": "Stop"
        },
        {
            "location": "/containers/#restart",
            "text": "Restart a container.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  The container name      lxc.containers.restart('local', 'container-name').then(response => {\n    console.log(response)\n})  Response  {\n    class: 'task',\n    created_at: '2018-04-08T16:37:36.511708398Z',\n    description: 'Restarting container',\n    err: '',\n    id: '4850b25b-3a9a-4666-acf6-9f2b4c25a236',\n    may_cancel: false,\n    metadata: null,\n    resources: {\n        containers: [\n            '/1.0/containers/my-container'\n        ]\n    },\n    status: 'Running',\n    status_code: 103,\n    updated_at: '2018-04-08T16:37:36.511708398Z'\n}",
            "title": "Restart"
        },
        {
            "location": "/containers/#freeze",
            "text": "Freeze a container.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  The container name      lxc.containers.freeze('local', 'container-name').then(response => {\n    console.log(response)\n})  Response  {\n    class: 'task',\n    created_at: '2018-04-08T16:37:36.511708398Z',\n    description: 'Freezing container',\n    err: '',\n    id: '4850b25b-3a9a-4666-acf6-9f2b4c25a236',\n    may_cancel: false,\n    metadata: null,\n    resources: {\n        containers: [\n            '/1.0/containers/my-container'\n        ]\n    },\n    status: 'Running',\n    status_code: 103,\n    updated_at: '2018-04-08T16:37:36.511708398Z'\n}",
            "title": "Freeze"
        },
        {
            "location": "/containers/#unfreeze",
            "text": "Unfreeze a container.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  The container name      lxc.containers.unfreeze('local', 'container-name').then(response => {\n    console.log(response)\n})  Response  {\n    class: 'task',\n    created_at: '2018-04-08T16:37:36.511708398Z',\n    description: 'Thawing container',\n    err: '',\n    id: '4850b25b-3a9a-4666-acf6-9f2b4c25a236',\n    may_cancel: false,\n    metadata: null,\n    resources: {\n        containers: [\n            '/1.0/containers/my-container'\n        ]\n    },\n    status: 'Running',\n    status_code: 103,\n    updated_at: '2018-04-08T16:37:36.511708398Z'\n}",
            "title": "Unfreeze"
        },
        {
            "location": "/containers/#delete",
            "text": "Delete a container.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Container name     mutator  function  Mutation function      lxc.containers.delete('local', 'container-name').then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Delete"
        },
        {
            "location": "/containers/#exec",
            "text": "Run a command in container.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Container name     options  object  The container options     mutator  function  Mutation function      lxc.containers.exec('local', 'my-container', {\n    \"command\": [\"/bin/bash\"],\n    \"environment\": {},\n    \"wait-for-websocket\": false,\n    \"record-output\": false,\n    \"interactive\": false,\n    \"width\": 80,\n    \"height\": 25\n}).then(response => {\n    console.log(response);\n})  Response  {\n    \"class\": \"task\",\n    \"created_at\": \"2018-04-16T01:58:34.642661556Z\",\n    \"description\": \"Executing command\",\n    \"err\": \"\",\n    \"id\": \"bff27d5c-f54c-4fb4-8956-60bcea56d074\",\n    \"may_cancel\": false,\n    \"metadata\": null,\n    \"resources\": {\n        \"containers\": [\n            \"/1.0/containers/my-container\"\n        ]\n    },\n    \"status\": \"Running\",\n    \"status_code\": 103,\n    \"updated_at\": \"2018-04-16T01:58:34.642661556Z\"\n}",
            "title": "Exec"
        },
        {
            "location": "/snapshots/",
            "text": "Helper methods for snapshots.\n\n\nList\n\n\nList container snapshots.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.containers.snapshots.list('local', 'my-container').then(response => {\n    console.log(response)\n})\n\n// or apply stripEndpoint on response\nlxc.containers.snapshots.list('local', 'my-container', response => lxc.containers.snapshots.stripEndpoint(response)).then(response => {\n    // [ 'my-snapshot' ]\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n[\n    \"/1.0/containers/my-container/snapshots/my-snapshot\"\n]\n\n\n\n\nInfo\n\n\nGet container snapshot information.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nsnapshot\n\n\nstring\n\n\nSnapshot name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.containers.snapshots.info('local', 'my-container', 'my-container (April 10, 2018 6:53 PM)').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    \"architecture\": \"x86_64\",\n    \"config\": {\n        \"image.architecture\": \"amd64\",\n        \"image.description\": \"ubuntu 16.04 LTS amd64 (release) (20180306)\",\n        \"image.label\": \"release\",\n        \"image.os\": \"ubuntu\",\n        \"image.release\": \"xenial\",\n        \"image.serial\": \"20180306\",\n        \"image.version\": \"16.04\",\n        \"volatile.base_image\": \"c5bbef7f4e1c19f0104fd4ub862b2e54x095d894765c75c6d72775f1d98135ec\",\n        \"volatile.eth0.hwaddr\": \"00:16:3e:24:39:ee\",\n        \"volatile.eth0.name\": \"eth0\",\n        \"volatile.idmap.base\": \"0\",\n        \"volatile.idmap.next\": \"[{\\\"Isuid\\\":true,\\\"Isgid\\\":false,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536},{\\\"Isuid\\\":false,\\\"Isgid\\\":true,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536}]\",\n        \"volatile.last_state.idmap\": \"[{\\\"Isuid\\\":true,\\\"Isgid\\\":false,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536},{\\\"Isuid\\\":false,\\\"Isgid\\\":true,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536}]\",\n        \"volatile.last_state.power\": \"STOPPED\"\n    },\n    \"created_at\": \"2018-04-10T17:53:44Z\",\n    \"devices\": {},\n    \"ephemeral\": false,\n    \"expanded_config\": {\n        \"boot.autostart\": \"0\",\n        \"image.architecture\": \"amd64\",\n        \"image.description\": \"ubuntu 16.04 LTS amd64 (release) (20180306)\",\n        \"image.label\": \"release\",\n        \"image.os\": \"ubuntu\",\n        \"image.release\": \"xenial\",\n        \"image.serial\": \"20180306\",\n        \"image.version\": \"16.04\",\n        \"limits.cpu\": \"1\",\n        \"limits.cpu.allowance\": \"90%\",\n        \"limits.cpu.priority\": \"9\",\n        \"limits.disk.priority\": \"9\",\n        \"limits.memory\": \"1056MB\",\n        \"limits.memory.enforce\": \"hard\",\n        \"limits.memory.swap\": \"1\",\n        \"limits.memory.swap.priority\": \"5\",\n        \"limits.network.priority\": \"9\",\n        \"limits.processes\": \"14100\",\n        \"security.nesting\": \"0\",\n        \"security.privileged\": \"0\",\n        \"volatile.base_image\": \"c5bbef7f4e1c19f0104fd49b862b2e549095d894765c75c6d72775f1d98185ec\",\n        \"volatile.eth0.hwaddr\": \"00:16:3e:24:39:ee\",\n        \"volatile.eth0.name\": \"eth0\",\n        \"volatile.idmap.base\": \"0\",\n        \"volatile.idmap.next\": \"[{\\\"Isuid\\\":true,\\\"Isgid\\\":false,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536},{\\\"Isuid\\\":false,\\\"Isgid\\\":true,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536}]\",\n        \"volatile.last_state.idmap\": \"[{\\\"Isuid\\\":true,\\\"Isgid\\\":false,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536},{\\\"Isuid\\\":false,\\\"Isgid\\\":true,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536}]\",\n        \"volatile.last_state.power\": \"STOPPED\"\n    },\n    \"expanded_devices\": {\n        \"eth0\": {\n            \"nictype\": \"bridged\",\n            \"parent\": \"lxdbr0\",\n            \"type\": \"nic\"\n        },\n        \"root\": {\n            \"path\": \"/\",\n            \"pool\": \"default\",\n            \"type\": \"disk\"\n        }\n    },\n    \"last_used_at\": \"1970-01-01T00:00:00Z\",\n    \"name\": \"my-container/my-container (April 10, 2018 6:53 PM)\",\n    \"profiles\": [\n        \"default\"\n    ],\n    \"stateful\": false\n}\n\n\n\n\nCreate\n\n\nCreate container snapshot.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nSnapshot options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.containers.snapshots.create('local', 'my-container', {\n    \"name\": \"my-snapshot\",\n    \"stateful\": true\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    \"class\": \"task\",\n    \"created_at\": \"2018-04-09T17:57:48.19705024Z\",\n    \"description\": \"Snapshotting container\",\n    \"err\": \"\",\n    \"id\": \"5db401c7-8d31-4110-aa15-0c6398a36cdb\",\n    \"may_cancel\": false,\n    \"metadata\": null,\n    \"resources\": {\n        \"containers\": [\n            \"/1.0/containers/my-container\"\n        ]\n    },\n    \"status\": \"Running\",\n    \"status_code\": 103,\n    \"updated_at\": \"2018-04-09T17:57:48.19705024Z\"\n}\n\n\n\n\nRename\n\n\nRename container snapshot.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nsnapshot\n\n\nstring\n\n\nSnapshot name\n\n\n\n\n\n\n\n\nnewname\n\n\nstring\n\n\nNew snapshot name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.containers.snapshots.rename('local', 'my-container', 'my-snapshot-name', 'new-snapshot-name').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    \"class\": \"task\",\n    \"created_at\": \"2018-04-10T19:17:15.517952676+01:00\",\n    \"err\": \"\",\n    \"id\": \"1863b8ce-b3d5-4a35-87bc-959eafbb106d\",\n    \"may_cancel\": false,\n    \"metadata\": null,\n    \"resources\": {\n        \"containers\": [\n            \"/1.0/containers/my-container\"\n        ]\n    },\n    \"status\": \"Running\",\n    \"status_code\": 103,\n    \"updated_at\": \"2018-04-10T19:17:15.517952676+01:00\"\n}\n\n\n\n\nDelete\n\n\nDelete container snapshot.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nsnapshot\n\n\nstring\n\n\nSnapshot name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.containers.snapshots.delete('local', 'my-container', 'my-snapshot-name').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    class: 'task',\n    created_at: '2018-04-10T20:23:56.80835635+01:00',\n    err: '',\n    id: 'd1a9df55-5748-40ff-a0e3-09e0096f278b',\n    may_cancel: false,\n    metadata: null,\n    resources: {\n        containers: ['/1.0/containers/my-container/my-snapshot']\n    },\n    status: 'Running',\n    status_code: 103,\n    updated_at: '2018-04-10T20:23:56.80835635+01:00'\n}\n\n\n\n\nRestore\n\n\nRestore container snapshot.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nsnapshot\n\n\nstring\n\n\nSnapshot name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.containers.snapshots.restore('local', 'my-container', 'my-snapshot-name').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}",
            "title": "Snapshots"
        },
        {
            "location": "/snapshots/#list",
            "text": "List container snapshots.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  Container name     mutator  function  Mutation function      lxc.containers.snapshots.list('local', 'my-container').then(response => {\n    console.log(response)\n})\n\n// or apply stripEndpoint on response\nlxc.containers.snapshots.list('local', 'my-container', response => lxc.containers.snapshots.stripEndpoint(response)).then(response => {\n    // [ 'my-snapshot' ]\n    console.log(response)\n})  Response  [\n    \"/1.0/containers/my-container/snapshots/my-snapshot\"\n]",
            "title": "List"
        },
        {
            "location": "/snapshots/#info",
            "text": "Get container snapshot information.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  Container name     snapshot  string  Snapshot name     mutator  function  Mutation function      lxc.containers.snapshots.info('local', 'my-container', 'my-container (April 10, 2018 6:53 PM)').then(response => {\n    console.log(response)\n})  Response  {\n    \"architecture\": \"x86_64\",\n    \"config\": {\n        \"image.architecture\": \"amd64\",\n        \"image.description\": \"ubuntu 16.04 LTS amd64 (release) (20180306)\",\n        \"image.label\": \"release\",\n        \"image.os\": \"ubuntu\",\n        \"image.release\": \"xenial\",\n        \"image.serial\": \"20180306\",\n        \"image.version\": \"16.04\",\n        \"volatile.base_image\": \"c5bbef7f4e1c19f0104fd4ub862b2e54x095d894765c75c6d72775f1d98135ec\",\n        \"volatile.eth0.hwaddr\": \"00:16:3e:24:39:ee\",\n        \"volatile.eth0.name\": \"eth0\",\n        \"volatile.idmap.base\": \"0\",\n        \"volatile.idmap.next\": \"[{\\\"Isuid\\\":true,\\\"Isgid\\\":false,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536},{\\\"Isuid\\\":false,\\\"Isgid\\\":true,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536}]\",\n        \"volatile.last_state.idmap\": \"[{\\\"Isuid\\\":true,\\\"Isgid\\\":false,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536},{\\\"Isuid\\\":false,\\\"Isgid\\\":true,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536}]\",\n        \"volatile.last_state.power\": \"STOPPED\"\n    },\n    \"created_at\": \"2018-04-10T17:53:44Z\",\n    \"devices\": {},\n    \"ephemeral\": false,\n    \"expanded_config\": {\n        \"boot.autostart\": \"0\",\n        \"image.architecture\": \"amd64\",\n        \"image.description\": \"ubuntu 16.04 LTS amd64 (release) (20180306)\",\n        \"image.label\": \"release\",\n        \"image.os\": \"ubuntu\",\n        \"image.release\": \"xenial\",\n        \"image.serial\": \"20180306\",\n        \"image.version\": \"16.04\",\n        \"limits.cpu\": \"1\",\n        \"limits.cpu.allowance\": \"90%\",\n        \"limits.cpu.priority\": \"9\",\n        \"limits.disk.priority\": \"9\",\n        \"limits.memory\": \"1056MB\",\n        \"limits.memory.enforce\": \"hard\",\n        \"limits.memory.swap\": \"1\",\n        \"limits.memory.swap.priority\": \"5\",\n        \"limits.network.priority\": \"9\",\n        \"limits.processes\": \"14100\",\n        \"security.nesting\": \"0\",\n        \"security.privileged\": \"0\",\n        \"volatile.base_image\": \"c5bbef7f4e1c19f0104fd49b862b2e549095d894765c75c6d72775f1d98185ec\",\n        \"volatile.eth0.hwaddr\": \"00:16:3e:24:39:ee\",\n        \"volatile.eth0.name\": \"eth0\",\n        \"volatile.idmap.base\": \"0\",\n        \"volatile.idmap.next\": \"[{\\\"Isuid\\\":true,\\\"Isgid\\\":false,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536},{\\\"Isuid\\\":false,\\\"Isgid\\\":true,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536}]\",\n        \"volatile.last_state.idmap\": \"[{\\\"Isuid\\\":true,\\\"Isgid\\\":false,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536},{\\\"Isuid\\\":false,\\\"Isgid\\\":true,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536}]\",\n        \"volatile.last_state.power\": \"STOPPED\"\n    },\n    \"expanded_devices\": {\n        \"eth0\": {\n            \"nictype\": \"bridged\",\n            \"parent\": \"lxdbr0\",\n            \"type\": \"nic\"\n        },\n        \"root\": {\n            \"path\": \"/\",\n            \"pool\": \"default\",\n            \"type\": \"disk\"\n        }\n    },\n    \"last_used_at\": \"1970-01-01T00:00:00Z\",\n    \"name\": \"my-container/my-container (April 10, 2018 6:53 PM)\",\n    \"profiles\": [\n        \"default\"\n    ],\n    \"stateful\": false\n}",
            "title": "Info"
        },
        {
            "location": "/snapshots/#create",
            "text": "Create container snapshot.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  Container name     options  object  Snapshot options     mutator  function  Mutation function      lxc.containers.snapshots.create('local', 'my-container', {\n    \"name\": \"my-snapshot\",\n    \"stateful\": true\n}).then(response => {\n    console.log(response)\n})  Response  {\n    \"class\": \"task\",\n    \"created_at\": \"2018-04-09T17:57:48.19705024Z\",\n    \"description\": \"Snapshotting container\",\n    \"err\": \"\",\n    \"id\": \"5db401c7-8d31-4110-aa15-0c6398a36cdb\",\n    \"may_cancel\": false,\n    \"metadata\": null,\n    \"resources\": {\n        \"containers\": [\n            \"/1.0/containers/my-container\"\n        ]\n    },\n    \"status\": \"Running\",\n    \"status_code\": 103,\n    \"updated_at\": \"2018-04-09T17:57:48.19705024Z\"\n}",
            "title": "Create"
        },
        {
            "location": "/snapshots/#rename",
            "text": "Rename container snapshot.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  Container name     snapshot  string  Snapshot name     newname  string  New snapshot name     mutator  function  Mutation function      lxc.containers.snapshots.rename('local', 'my-container', 'my-snapshot-name', 'new-snapshot-name').then(response => {\n    console.log(response)\n})  Response  {\n    \"class\": \"task\",\n    \"created_at\": \"2018-04-10T19:17:15.517952676+01:00\",\n    \"err\": \"\",\n    \"id\": \"1863b8ce-b3d5-4a35-87bc-959eafbb106d\",\n    \"may_cancel\": false,\n    \"metadata\": null,\n    \"resources\": {\n        \"containers\": [\n            \"/1.0/containers/my-container\"\n        ]\n    },\n    \"status\": \"Running\",\n    \"status_code\": 103,\n    \"updated_at\": \"2018-04-10T19:17:15.517952676+01:00\"\n}",
            "title": "Rename"
        },
        {
            "location": "/snapshots/#delete",
            "text": "Delete container snapshot.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  Container name     snapshot  string  Snapshot name     mutator  function  Mutation function      lxc.containers.snapshots.delete('local', 'my-container', 'my-snapshot-name').then(response => {\n    console.log(response)\n})  Response  {\n    class: 'task',\n    created_at: '2018-04-10T20:23:56.80835635+01:00',\n    err: '',\n    id: 'd1a9df55-5748-40ff-a0e3-09e0096f278b',\n    may_cancel: false,\n    metadata: null,\n    resources: {\n        containers: ['/1.0/containers/my-container/my-snapshot']\n    },\n    status: 'Running',\n    status_code: 103,\n    updated_at: '2018-04-10T20:23:56.80835635+01:00'\n}",
            "title": "Delete"
        },
        {
            "location": "/snapshots/#restore",
            "text": "Restore container snapshot.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  Container name     snapshot  string  Snapshot name     mutator  function  Mutation function      lxc.containers.snapshots.restore('local', 'my-container', 'my-snapshot-name').then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Restore"
        },
        {
            "location": "/images/",
            "text": "Helper methods for image operations.\n\n\nList\n\n\nList images on remote.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.images.list('local').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n[\n    \"/1.0/images/be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a\"\n]\n\n\n\n\nInfo\n\n\nGet image information.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nfingerprint\n\n\nstring\n\n\nImage fingerprint\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.images.info('local', 'be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    \"aliases\": [],\n    \"architecture\": \"x86_64\",\n    \"auto_update\": true,\n    \"cached\": true,\n    \"created_at\": \"2018-04-05T00:00:00Z\",\n    \"expires_at\": \"2021-04-21T00:00:00Z\",\n    \"filename\": \"ubuntu-16.04-server-cloudimg-amd64-lxd.tar.xz\",\n    \"fingerprint\": \"be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a\",\n    \"last_used_at\": \"2018-04-08T22:49:34Z\",\n    \"properties\": {\n        \"architecture\": \"amd64\",\n        \"description\": \"ubuntu 16.04 LTS amd64 (release) (20180405)\",\n        \"label\": \"release\",\n        \"os\": \"ubuntu\",\n        \"release\": \"xenial\",\n        \"serial\": \"20180405\",\n        \"version\": \"16.04\"\n    },\n    \"public\": false,\n    \"size\": 163857160,\n    \"update_source\": {\n        \"alias\": \"16.04\",\n        \"certificate\": \"\",\n        \"protocol\": \"simplestreams\",\n        \"server\": \"https://cloud-images.ubuntu.com/releases\"\n    },\n    \"uploaded_at\": \"2018-04-08T15:41:08Z\"\n}\n\n\n\n\nReplace\n\n\nReplace image properties, update information and visibility.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nfingerprint\n\n\nstring\n\n\nImage fingerprint\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nImages options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.images.replace('local', 'be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a', {\n    \"auto_update\": true,\n    \"properties\": {\n        \"architecture\": \"x86_64\",\n        \"description\": \"Ubuntu 16.04 LTS server (20160201)\",\n        \"os\": \"ubuntu\",\n        \"release\": \"trusty\"\n    },\n    \"public\": true,\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nUpdate\n\n\nUpdate image properties, update information and visibility.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nfingerprint\n\n\nstring\n\n\nImage fingerprint\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nImages options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.images.update('local', 'be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a', {\n    \"auto_update\": true,\n    \"properties\": {\n        \"architecture\": \"x86_64\",\n        \"description\": \"Ubuntu 16.04 LTS server (20160201)\",\n        \"os\": \"ubuntu\",\n        \"release\": \"trusty\"\n    },\n    \"public\": true,\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nDelete\n\n\nDelete an image.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nfingerprint\n\n\nstring\n\n\nImage fingerprint\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.images.delete('local', 'be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}",
            "title": "Images"
        },
        {
            "location": "/images/#list",
            "text": "List images on remote.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    mutator  function  Mutation function      lxc.images.list('local').then(response => {\n    console.log(response)\n})  Response  [\n    \"/1.0/images/be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a\"\n]",
            "title": "List"
        },
        {
            "location": "/images/#info",
            "text": "Get image information.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    fingerprint  string  Image fingerprint     mutator  function  Mutation function      lxc.images.info('local', 'be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a').then(response => {\n    console.log(response)\n})  Response  {\n    \"aliases\": [],\n    \"architecture\": \"x86_64\",\n    \"auto_update\": true,\n    \"cached\": true,\n    \"created_at\": \"2018-04-05T00:00:00Z\",\n    \"expires_at\": \"2021-04-21T00:00:00Z\",\n    \"filename\": \"ubuntu-16.04-server-cloudimg-amd64-lxd.tar.xz\",\n    \"fingerprint\": \"be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a\",\n    \"last_used_at\": \"2018-04-08T22:49:34Z\",\n    \"properties\": {\n        \"architecture\": \"amd64\",\n        \"description\": \"ubuntu 16.04 LTS amd64 (release) (20180405)\",\n        \"label\": \"release\",\n        \"os\": \"ubuntu\",\n        \"release\": \"xenial\",\n        \"serial\": \"20180405\",\n        \"version\": \"16.04\"\n    },\n    \"public\": false,\n    \"size\": 163857160,\n    \"update_source\": {\n        \"alias\": \"16.04\",\n        \"certificate\": \"\",\n        \"protocol\": \"simplestreams\",\n        \"server\": \"https://cloud-images.ubuntu.com/releases\"\n    },\n    \"uploaded_at\": \"2018-04-08T15:41:08Z\"\n}",
            "title": "Info"
        },
        {
            "location": "/images/#replace",
            "text": "Replace image properties, update information and visibility.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    fingerprint  string  Image fingerprint     options  object  Images options     mutator  function  Mutation function      lxc.images.replace('local', 'be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a', {\n    \"auto_update\": true,\n    \"properties\": {\n        \"architecture\": \"x86_64\",\n        \"description\": \"Ubuntu 16.04 LTS server (20160201)\",\n        \"os\": \"ubuntu\",\n        \"release\": \"trusty\"\n    },\n    \"public\": true,\n}).then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Replace"
        },
        {
            "location": "/images/#update",
            "text": "Update image properties, update information and visibility.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    fingerprint  string  Image fingerprint     options  object  Images options     mutator  function  Mutation function      lxc.images.update('local', 'be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a', {\n    \"auto_update\": true,\n    \"properties\": {\n        \"architecture\": \"x86_64\",\n        \"description\": \"Ubuntu 16.04 LTS server (20160201)\",\n        \"os\": \"ubuntu\",\n        \"release\": \"trusty\"\n    },\n    \"public\": true,\n}).then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Update"
        },
        {
            "location": "/images/#delete",
            "text": "Delete an image.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    fingerprint  string  Image fingerprint     mutator  function  Mutation function      lxc.images.delete('local', 'be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a').then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Delete"
        },
        {
            "location": "/aliases/",
            "text": "Helper methods for alias operations.\n\n\nList\n\n\nList image aliases\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.images.aliases.list('local').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n[\n    \"/1.0/images/aliases/alias-name\"\n]\n\n\n\n\nInfo\n\n\nGet image alias information.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nAlias name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.images.aliases.info('local', 'alias-name').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    \"description\": \"The alias description\",\n    \"name\": \"alias-name\",\n    \"target\": \"<image fingerprint>\"\n}\n\n\n\n\nCreate\n\n\nGet image alias information.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nAlias options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.images.aliases.create('local', {\n    \"description\": \"The alias description\",\n    \"target\": \"<image fingerprint>\",\n    \"name\": \"alias-name\"\n}).then(response => {\n    console.log(response);\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nReplace\n\n\nReplace alias target or description.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nAlias name\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nAlias options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.images.aliases.replace('local', 'alias-name', {\n    \"description\": \"New description\",\n    \"target\": \"<image fingerprint>\"\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nUpdate\n\n\nUpdate alias target or description.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nAlias name\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nImages options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.images.aliases.update('local', 'alias-name', {\n    \"description\": \"New description\",\n    \"target\": \"<image fingerprint>\"\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nRename\n\n\nRename an image alias.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nAlias name\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nImages options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.images.aliases.rename('local', 'alias-name', {\n    \"name\": \"new-name\"\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nDelete\n\n\nDelete an image alias.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nname\n\n\nAlias name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.images.aliases.delete('local', 'alias-name').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}",
            "title": "Aliases"
        },
        {
            "location": "/aliases/#list",
            "text": "List image aliases  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    mutator  function  Mutation function      lxc.images.aliases.list('local').then(response => {\n    console.log(response)\n})  Response  [\n    \"/1.0/images/aliases/alias-name\"\n]",
            "title": "List"
        },
        {
            "location": "/aliases/#info",
            "text": "Get image alias information.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Alias name     mutator  function  Mutation function      lxc.images.aliases.info('local', 'alias-name').then(response => {\n    console.log(response)\n})  Response  {\n    \"description\": \"The alias description\",\n    \"name\": \"alias-name\",\n    \"target\": \"<image fingerprint>\"\n}",
            "title": "Info"
        },
        {
            "location": "/aliases/#create",
            "text": "Get image alias information.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    options  object  Alias options     mutator  function  Mutation function      lxc.images.aliases.create('local', {\n    \"description\": \"The alias description\",\n    \"target\": \"<image fingerprint>\",\n    \"name\": \"alias-name\"\n}).then(response => {\n    console.log(response);\n})  Response  {\n\n}",
            "title": "Create"
        },
        {
            "location": "/aliases/#replace",
            "text": "Replace alias target or description.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Alias name     options  object  Alias options     mutator  function  Mutation function      lxc.images.aliases.replace('local', 'alias-name', {\n    \"description\": \"New description\",\n    \"target\": \"<image fingerprint>\"\n}).then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Replace"
        },
        {
            "location": "/aliases/#update",
            "text": "Update alias target or description.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Alias name     options  object  Images options     mutator  function  Mutation function      lxc.images.aliases.update('local', 'alias-name', {\n    \"description\": \"New description\",\n    \"target\": \"<image fingerprint>\"\n}).then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Update"
        },
        {
            "location": "/aliases/#rename",
            "text": "Rename an image alias.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Alias name     options  object  Images options     mutator  function  Mutation function      lxc.images.aliases.rename('local', 'alias-name', {\n    \"name\": \"new-name\"\n}).then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Rename"
        },
        {
            "location": "/aliases/#delete",
            "text": "Delete an image alias.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  name  Alias name     mutator  function  Mutation function      lxc.images.aliases.delete('local', 'alias-name').then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Delete"
        },
        {
            "location": "/profiles/",
            "text": "Helper methods for profile operations.\n\n\nList\n\n\nList profiles.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.profiles.list('local').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n[\n    \"/1.0/profiles/default\"\n]\n\n\n\n\nInfo\n\n\nGet profile information.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nProfile name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.profiles.info('local', 'default').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    \"config\": {},\n    \"description\": \"Default LXD profile\",\n    \"devices\": {\n        \"eth0\": {\n            \"name\": \"eth0\",\n            \"nictype\": \"bridged\",\n            \"parent\": \"lxdbr0\",\n            \"type\": \"nic\"\n        },\n        \"root\": {\n            \"path\": \"/\",\n            \"pool\": \"default\",\n            \"type\": \"disk\"\n        }\n    },\n    \"name\": \"default\",\n    \"used_by\": [\n        \"/1.0/containers/my-container\"\n    ]\n}\n\n\n\n\nCreate\n\n\nCreate profile.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nProfile options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.profiles.create('local', {\n    \"name\": \"my-new-profile\",\n    \"description\": \"Some informative description string\",\n    \"config\": {\n        \"limits.memory\": \"2GB\"\n    },\n    \"devices\": {\n        \"kvm\": {\n            \"type\": \"unix-char\",\n            \"path\": \"/dev/kvm\"\n        }\n    }\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nReplace\n\n\nReplace profile properties, update description, devices and limits.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nProfile name\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nProfile options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.profiles.replace('local', 'my-new-profile', {\n    \"config\": {\n        \"limits.memory\": \"4GB\"\n    },\n    \"description\": \"Some description string\",\n    \"devices\": {}\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nUpdate\n\n\nUpdate profile properties, update description, devices and limits.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nProfile name\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nProfile options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.profiles.replace('local', 'my-new-profile', {\n    \"config\": {\n        \"limits.memory\": \"4GB\"\n    },\n    \"description\": \"Some description string\",\n    \"devices\": {}\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nRename\n\n\nRename a profile.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nProfile name\n\n\n\n\n\n\n\n\nnewName\n\n\nstring\n\n\nNew profile name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.profiles.rename('local', 'old-name', 'new-name').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nDelete\n\n\nDelete a profile.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nProfile name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.profiles.delete('local', 'profile-name').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}",
            "title": "Profiles"
        },
        {
            "location": "/profiles/#list",
            "text": "List profiles.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    mutator  function  Mutation function      lxc.profiles.list('local').then(response => {\n    console.log(response)\n})  Response  [\n    \"/1.0/profiles/default\"\n]",
            "title": "List"
        },
        {
            "location": "/profiles/#info",
            "text": "Get profile information.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Profile name     mutator  function  Mutation function      lxc.profiles.info('local', 'default').then(response => {\n    console.log(response)\n})  Response  {\n    \"config\": {},\n    \"description\": \"Default LXD profile\",\n    \"devices\": {\n        \"eth0\": {\n            \"name\": \"eth0\",\n            \"nictype\": \"bridged\",\n            \"parent\": \"lxdbr0\",\n            \"type\": \"nic\"\n        },\n        \"root\": {\n            \"path\": \"/\",\n            \"pool\": \"default\",\n            \"type\": \"disk\"\n        }\n    },\n    \"name\": \"default\",\n    \"used_by\": [\n        \"/1.0/containers/my-container\"\n    ]\n}",
            "title": "Info"
        },
        {
            "location": "/profiles/#create",
            "text": "Create profile.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    options  object  Profile options     mutator  function  Mutation function      lxc.profiles.create('local', {\n    \"name\": \"my-new-profile\",\n    \"description\": \"Some informative description string\",\n    \"config\": {\n        \"limits.memory\": \"2GB\"\n    },\n    \"devices\": {\n        \"kvm\": {\n            \"type\": \"unix-char\",\n            \"path\": \"/dev/kvm\"\n        }\n    }\n}).then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Create"
        },
        {
            "location": "/profiles/#replace",
            "text": "Replace profile properties, update description, devices and limits.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Profile name     options  object  Profile options     mutator  function  Mutation function      lxc.profiles.replace('local', 'my-new-profile', {\n    \"config\": {\n        \"limits.memory\": \"4GB\"\n    },\n    \"description\": \"Some description string\",\n    \"devices\": {}\n}).then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Replace"
        },
        {
            "location": "/profiles/#update",
            "text": "Update profile properties, update description, devices and limits.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Profile name     options  object  Profile options     mutator  function  Mutation function      lxc.profiles.replace('local', 'my-new-profile', {\n    \"config\": {\n        \"limits.memory\": \"4GB\"\n    },\n    \"description\": \"Some description string\",\n    \"devices\": {}\n}).then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Update"
        },
        {
            "location": "/profiles/#rename",
            "text": "Rename a profile.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Profile name     newName  string  New profile name     mutator  function  Mutation function      lxc.profiles.rename('local', 'old-name', 'new-name').then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Rename"
        },
        {
            "location": "/profiles/#delete",
            "text": "Delete a profile.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Profile name     mutator  function  Mutation function      lxc.profiles.delete('local', 'profile-name').then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Delete"
        },
        {
            "location": "/networks/",
            "text": "Helper methods for network operations.\n\n\nList\n\n\nList networks.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.networks.list('local').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n[\n    \"/1.0/networks/lxdbr0\",\n    \"/1.0/networks/lo\"\n]\n\n\n\n\nInfo\n\n\nGet network information.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nNetwork name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.networks.info('local', 'lxdbr0').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    \"config\": {\n        \"ipv4.address\": \"10.158.250.1/24\",\n        \"ipv4.nat\": \"true\",\n        \"ipv6.address\": \"fd42:a224:5bde:20c0::1/64\",\n        \"ipv6.nat\": \"true\"\n    },\n    \"description\": \"\",\n    \"managed\": true,\n    \"name\": \"lxdbr0\",\n    \"type\": \"bridge\",\n    \"used_by\": [\n        \"/1.0/containers/my-container\"\n    ]\n}\n\n\n\n\nCreate\n\n\nCreate network.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nNetwork options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.networks.create('local', {\n    \"name\": \"my-network\",\n    \"description\": \"My network\",\n    \"config\": {\n        \"ipv4.address\": \"none\",\n        \"ipv6.address\": \"2001:470:b368:4242::1/64\",\n        \"ipv6.nat\": \"true\"\n    }\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nReplace\n\n\nReplace the network information.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nNetwork name\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nNetwork options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.networks.replace('local', 'my-new-network', {\n    \"config\": {\n        \"bridge.driver\": \"openvswitch\",\n        \"ipv4.address\": \"10.0.3.1/24\",\n        \"ipv6.address\": \"fd1:6997:4939:495d::1/64\"\n    }\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nUpdate\n\n\nUpdate the network information.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nNetwork name\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nNetwork options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.networks.replace('local', 'my-new-network', {\n    \"config\": {\n        \"dns.mode\": \"dynamic\"\n    }\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nRename\n\n\nRename a network.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nNetwork name\n\n\n\n\n\n\n\n\nnewName\n\n\nstring\n\n\nNew network name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.networks.rename('local', 'old-name', 'new-name').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nDelete\n\n\nDelete a network.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nNetwork name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.networks.delete('local', 'network-name').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}",
            "title": "Networks"
        },
        {
            "location": "/networks/#list",
            "text": "List networks.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    mutator  function  Mutation function      lxc.networks.list('local').then(response => {\n    console.log(response)\n})  Response  [\n    \"/1.0/networks/lxdbr0\",\n    \"/1.0/networks/lo\"\n]",
            "title": "List"
        },
        {
            "location": "/networks/#info",
            "text": "Get network information.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Network name     mutator  function  Mutation function      lxc.networks.info('local', 'lxdbr0').then(response => {\n    console.log(response)\n})  Response  {\n    \"config\": {\n        \"ipv4.address\": \"10.158.250.1/24\",\n        \"ipv4.nat\": \"true\",\n        \"ipv6.address\": \"fd42:a224:5bde:20c0::1/64\",\n        \"ipv6.nat\": \"true\"\n    },\n    \"description\": \"\",\n    \"managed\": true,\n    \"name\": \"lxdbr0\",\n    \"type\": \"bridge\",\n    \"used_by\": [\n        \"/1.0/containers/my-container\"\n    ]\n}",
            "title": "Info"
        },
        {
            "location": "/networks/#create",
            "text": "Create network.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    options  object  Network options     mutator  function  Mutation function      lxc.networks.create('local', {\n    \"name\": \"my-network\",\n    \"description\": \"My network\",\n    \"config\": {\n        \"ipv4.address\": \"none\",\n        \"ipv6.address\": \"2001:470:b368:4242::1/64\",\n        \"ipv6.nat\": \"true\"\n    }\n}).then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Create"
        },
        {
            "location": "/networks/#replace",
            "text": "Replace the network information.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Network name     options  object  Network options     mutator  function  Mutation function      lxc.networks.replace('local', 'my-new-network', {\n    \"config\": {\n        \"bridge.driver\": \"openvswitch\",\n        \"ipv4.address\": \"10.0.3.1/24\",\n        \"ipv6.address\": \"fd1:6997:4939:495d::1/64\"\n    }\n}).then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Replace"
        },
        {
            "location": "/networks/#update",
            "text": "Update the network information.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Network name     options  object  Network options     mutator  function  Mutation function      lxc.networks.replace('local', 'my-new-network', {\n    \"config\": {\n        \"dns.mode\": \"dynamic\"\n    }\n}).then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Update"
        },
        {
            "location": "/networks/#rename",
            "text": "Rename a network.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Network name     newName  string  New network name     mutator  function  Mutation function      lxc.networks.rename('local', 'old-name', 'new-name').then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Rename"
        },
        {
            "location": "/networks/#delete",
            "text": "Delete a network.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Network name     mutator  function  Mutation function      lxc.networks.delete('local', 'network-name').then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Delete"
        },
        {
            "location": "/files/",
            "text": "Helper methods for files.\n\n\nList\n\n\nList files and directories in a container.\n\n\nNote:\n Does not work for listing \nfile contents\n unless your using LXD > 3.0.0, \nso should be used only to list directories, see pull method below on how to \nfetch them.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\npath\n\n\nstring\n\n\nContainer directory path\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.containers.files.list('local', 'my-container', '/').then(response => {\n    console.log(response);\n})\n\n\n\n\nResponse\n\n\n[\n    \"proc\",\n    \"usr\",\n    \"run\",\n    \"etc\",\n    \"home\",\n    \"sbin\",\n    \"snap\",\n    \"opt\",\n    \"lib64\",\n    \"boot\",\n    \"root\",\n    \"media\",\n    \"lib\",\n    \"sys\",\n    \"bin\",\n    \"mnt\",\n    \"var\",\n    \"tmp\",\n    \"srv\",\n    \"dev\"\n]\n\n\n\n\nPush\n\n\nUpload files or folders into the container.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nsource\n\n\nstring\n\n\nLocal file/folder path\n\n\n\n\n\n\n\n\npath\n\n\nstring\n\n\nContainer file path\n\n\n\n\n\n\n\n\n\n\n\n    Note: If both the \nsource\n and the \npath\n parameters are folders, the method will\n    recursively upload, otherwise it will set mode \n755\n if folder or \n644\n if file.\n    All files are uploaded as uid/gid root user.\n\n\n\n// single file\nlxc.containers.files.push('local', 'my-container', '/local/path/to/file.ext', '/path/to/file.ext').then(response => {\n    console.log(response);\n})\n\n// entire directory\nlxc.containers.files.push('local', 'my-container', '/local/path/to/folder', '/path/to/folder').then(response => {\n    console.log(response);\n})\n\n\n\n\nResponse\n\n\n\"\"\n\n\n\n\nPull\n\n\nDownload a file from the container.\n\n\nNote:\n We use \nlxc file pull\n as there is a bug which prevents accessing the file with \nfiles endpoint though \nlxc query\n. Its fixed in LXD > 3.0.0, so will be converted \nto use that in future.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\npath\n\n\nstring\n\n\nContainer file path\n\n\n\n\n\n\n\n\n\n\nlxc.containers.files.pull('local', 'my-container', '/path/to/file').then(response => {\n    console.log(response);\n})\n\n\n\n\n\n    Because with \nfile pull\n you cant output to stdout, we need to pull the file then \ncat\n it,\n    so a folder structure is created based upon the path.\n\n\n\nExample above would create: \n./.files/local/my-container/path/to/file\n\n\nResponse\n\n\nThe file contents",
            "title": "Files"
        },
        {
            "location": "/files/#list",
            "text": "List files and directories in a container.  Note:  Does not work for listing  file contents  unless your using LXD > 3.0.0, \nso should be used only to list directories, see pull method below on how to \nfetch them.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  Container name     path  string  Container directory path     mutator  function  Mutation function      lxc.containers.files.list('local', 'my-container', '/').then(response => {\n    console.log(response);\n})  Response  [\n    \"proc\",\n    \"usr\",\n    \"run\",\n    \"etc\",\n    \"home\",\n    \"sbin\",\n    \"snap\",\n    \"opt\",\n    \"lib64\",\n    \"boot\",\n    \"root\",\n    \"media\",\n    \"lib\",\n    \"sys\",\n    \"bin\",\n    \"mnt\",\n    \"var\",\n    \"tmp\",\n    \"srv\",\n    \"dev\"\n]",
            "title": "List"
        },
        {
            "location": "/files/#push",
            "text": "Upload files or folders into the container.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  Container name     source  string  Local file/folder path     path  string  Container file path      \n    Note: If both the  source  and the  path  parameters are folders, the method will\n    recursively upload, otherwise it will set mode  755  if folder or  644  if file.\n    All files are uploaded as uid/gid root user.  // single file\nlxc.containers.files.push('local', 'my-container', '/local/path/to/file.ext', '/path/to/file.ext').then(response => {\n    console.log(response);\n})\n\n// entire directory\nlxc.containers.files.push('local', 'my-container', '/local/path/to/folder', '/path/to/folder').then(response => {\n    console.log(response);\n})  Response  \"\"",
            "title": "Push"
        },
        {
            "location": "/files/#pull",
            "text": "Download a file from the container.  Note:  We use  lxc file pull  as there is a bug which prevents accessing the file with \nfiles endpoint though  lxc query . Its fixed in LXD > 3.0.0, so will be converted \nto use that in future.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  Container name     path  string  Container file path      lxc.containers.files.pull('local', 'my-container', '/path/to/file').then(response => {\n    console.log(response);\n})  \n    Because with  file pull  you cant output to stdout, we need to pull the file then  cat  it,\n    so a folder structure is created based upon the path.  Example above would create:  ./.files/local/my-container/path/to/file  Response  The file contents",
            "title": "Pull"
        },
        {
            "location": "/logs/",
            "text": "Helper methods for logs.\n\n\nList\n\n\nReturns a list of the log files available for this container. \n\n\nNote:\n This works on containers that have been deleted (or were never created) \nto enable you to get logs for failed creations.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.containers.logs.list('local', 'my-container').then(response => {\n    console.log(response);\n})\n\n\n\n\nResponse\n\n\n[\n    \"/1.0/containers/my-container/logs/forkstart.log\",\n    \"/1.0/containers/my-container/logs/lxc.conf\",\n    \"/1.0/containers/my-container/logs/lxc.log\"\n]\n\n\n\n\nGet\n\n\nReturns the contents of a particular log file. \n\n\nNote:\n This method ONLY works with LXD > 3.0.0\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nlogfile\n\n\nstring\n\n\nContainer logfile\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.containers.logs.get('local', 'my-container', 'lxc.conf').then(response => {\n    console.log(response);\n})\n\n\n\n\nResponse\n\n\nThe log file contents\n\n\n\n\nDelete\n\n\nDelete a particular log file.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nlogfile\n\n\nstring\n\n\nContainer logfile\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.containers.logs.delete('local', 'my-container', 'lxc.conf').then(response => {\n    console.log(response);\n})\n\n\n\n\nResponse\n\n\n\"\"",
            "title": "Logs"
        },
        {
            "location": "/logs/#list",
            "text": "Returns a list of the log files available for this container.   Note:  This works on containers that have been deleted (or were never created) \nto enable you to get logs for failed creations.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  Container name     mutator  function  Mutation function      lxc.containers.logs.list('local', 'my-container').then(response => {\n    console.log(response);\n})  Response  [\n    \"/1.0/containers/my-container/logs/forkstart.log\",\n    \"/1.0/containers/my-container/logs/lxc.conf\",\n    \"/1.0/containers/my-container/logs/lxc.log\"\n]",
            "title": "List"
        },
        {
            "location": "/logs/#get",
            "text": "Returns the contents of a particular log file.   Note:  This method ONLY works with LXD > 3.0.0  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  Container name     logfile  string  Container logfile     mutator  function  Mutation function      lxc.containers.logs.get('local', 'my-container', 'lxc.conf').then(response => {\n    console.log(response);\n})  Response  The log file contents",
            "title": "Get"
        },
        {
            "location": "/logs/#delete",
            "text": "Delete a particular log file.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  Container name     logfile  string  Container logfile     mutator  function  Mutation function      lxc.containers.logs.delete('local', 'my-container', 'lxc.conf').then(response => {\n    console.log(response);\n})  Response  \"\"",
            "title": "Delete"
        },
        {
            "location": "/metadata/",
            "text": "Helper methods for container metadata.\n\n\nGet\n\n\nReturns the containers metadata.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.containers.metadata.get('local', 'my-container').then(response => {\n    console.log(response);\n})\n\n\n\n\nResponse\n\n\n{\n    \"architecture\": \"x86_64\",\n    \"creation_date\": 1522920368,\n    \"expiry_date\": 0,\n    \"properties\": {\n        \"architecture\": \"x86_64\",\n        \"description\": \"Ubuntu 16.04 LTS server (20180405)\",\n        \"os\": \"ubuntu\",\n        \"release\": \"xenial\"\n    },\n    \"templates\": {\n        \"/etc/hostname\": {\n            \"create_only\": false,\n            \"properties\": null,\n            \"template\": \"hostname.tpl\",\n            \"when\": [\n                \"create\",\n                \"copy\"\n            ]\n        },\n        \"/var/lib/cloud/seed/nocloud-net/meta-data\": {\n            \"create_only\": false,\n            \"properties\": null,\n            \"template\": \"cloud-init-meta.tpl\",\n            \"when\": [\n                \"create\",\n                \"copy\"\n            ]\n        },\n        \"/var/lib/cloud/seed/nocloud-net/network-config\": {\n            \"create_only\": false,\n            \"properties\": null,\n            \"template\": \"cloud-init-network.tpl\",\n            \"when\": [\n                \"create\",\n                \"copy\"\n            ]\n        },\n        \"/var/lib/cloud/seed/nocloud-net/user-data\": {\n            \"create_only\": false,\n            \"properties\": {\n                \"default\": \"#cloud-config\\n{}\\n\"\n            },\n            \"template\": \"cloud-init-user.tpl\",\n            \"when\": [\n                \"create\",\n                \"copy\"\n            ]\n        },\n        \"/var/lib/cloud/seed/nocloud-net/vendor-data\": {\n            \"create_only\": false,\n            \"properties\": {\n                \"default\": \"#cloud-config\\n{}\\n\"\n            },\n            \"template\": \"cloud-init-vendor.tpl\",\n            \"when\": [\n                \"create\",\n                \"copy\"\n            ]\n        }\n    }\n}\n\n\n\n\nReplace\n\n\nReplace the containers metadata.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nmetadata\n\n\nstring\n\n\nContainer metadata\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.containers.metadata.replace('local', 'my-container', {\n    \"architecture\": \"x86_64\",\n    \"creation_date\": 1522920368,\n    \"expiry_date\": 0,\n    \"properties\": {\n        \"architecture\": \"x86_64\",\n        \"description\": \"Ubuntu 16.04 LTS server (20180405)\",\n        \"os\": \"ubuntu\",\n        \"release\": \"xenial\"\n    },\n    \"templates\": {\n        \"/etc/hostname\": {\n            \"create_only\": false,\n            \"properties\": null,\n            \"template\": \"hostname.tpl\",\n            \"when\": [\n                \"create\",\n                \"copy\"\n            ]\n        },\n        \"/var/lib/cloud/seed/nocloud-net/meta-data\": {\n            \"create_only\": false,\n            \"properties\": null,\n            \"template\": \"cloud-init-meta.tpl\",\n            \"when\": [\n                \"create\",\n                \"copy\"\n            ]\n        },\n        \"/var/lib/cloud/seed/nocloud-net/network-config\": {\n            \"create_only\": false,\n            \"properties\": null,\n            \"template\": \"cloud-init-network.tpl\",\n            \"when\": [\n                \"create\",\n                \"copy\"\n            ]\n        },\n        \"/var/lib/cloud/seed/nocloud-net/user-data\": {\n            \"create_only\": false,\n            \"properties\": {\n                \"default\": \"#cloud-config\\n{}\\n\"\n            },\n            \"template\": \"cloud-init-user.tpl\",\n            \"when\": [\n                \"create\",\n                \"copy\"\n            ]\n        },\n        \"/var/lib/cloud/seed/nocloud-net/vendor-data\": {\n            \"create_only\": false,\n            \"properties\": {\n                \"default\": \"#cloud-config\\n{}\\n\"\n            },\n            \"template\": \"cloud-init-vendor.tpl\",\n            \"when\": [\n                \"create\",\n                \"copy\"\n            ]\n        }\n    }\n}).then(response => {\n    console.log(response);\n})\n\n\n\n\nResponse\n\n\n{\n\n}",
            "title": "Metadata"
        },
        {
            "location": "/metadata/#get",
            "text": "Returns the containers metadata.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  Container name     mutator  function  Mutation function      lxc.containers.metadata.get('local', 'my-container').then(response => {\n    console.log(response);\n})  Response  {\n    \"architecture\": \"x86_64\",\n    \"creation_date\": 1522920368,\n    \"expiry_date\": 0,\n    \"properties\": {\n        \"architecture\": \"x86_64\",\n        \"description\": \"Ubuntu 16.04 LTS server (20180405)\",\n        \"os\": \"ubuntu\",\n        \"release\": \"xenial\"\n    },\n    \"templates\": {\n        \"/etc/hostname\": {\n            \"create_only\": false,\n            \"properties\": null,\n            \"template\": \"hostname.tpl\",\n            \"when\": [\n                \"create\",\n                \"copy\"\n            ]\n        },\n        \"/var/lib/cloud/seed/nocloud-net/meta-data\": {\n            \"create_only\": false,\n            \"properties\": null,\n            \"template\": \"cloud-init-meta.tpl\",\n            \"when\": [\n                \"create\",\n                \"copy\"\n            ]\n        },\n        \"/var/lib/cloud/seed/nocloud-net/network-config\": {\n            \"create_only\": false,\n            \"properties\": null,\n            \"template\": \"cloud-init-network.tpl\",\n            \"when\": [\n                \"create\",\n                \"copy\"\n            ]\n        },\n        \"/var/lib/cloud/seed/nocloud-net/user-data\": {\n            \"create_only\": false,\n            \"properties\": {\n                \"default\": \"#cloud-config\\n{}\\n\"\n            },\n            \"template\": \"cloud-init-user.tpl\",\n            \"when\": [\n                \"create\",\n                \"copy\"\n            ]\n        },\n        \"/var/lib/cloud/seed/nocloud-net/vendor-data\": {\n            \"create_only\": false,\n            \"properties\": {\n                \"default\": \"#cloud-config\\n{}\\n\"\n            },\n            \"template\": \"cloud-init-vendor.tpl\",\n            \"when\": [\n                \"create\",\n                \"copy\"\n            ]\n        }\n    }\n}",
            "title": "Get"
        },
        {
            "location": "/metadata/#replace",
            "text": "Replace the containers metadata.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  Container name     metadata  string  Container metadata     mutator  function  Mutation function      lxc.containers.metadata.replace('local', 'my-container', {\n    \"architecture\": \"x86_64\",\n    \"creation_date\": 1522920368,\n    \"expiry_date\": 0,\n    \"properties\": {\n        \"architecture\": \"x86_64\",\n        \"description\": \"Ubuntu 16.04 LTS server (20180405)\",\n        \"os\": \"ubuntu\",\n        \"release\": \"xenial\"\n    },\n    \"templates\": {\n        \"/etc/hostname\": {\n            \"create_only\": false,\n            \"properties\": null,\n            \"template\": \"hostname.tpl\",\n            \"when\": [\n                \"create\",\n                \"copy\"\n            ]\n        },\n        \"/var/lib/cloud/seed/nocloud-net/meta-data\": {\n            \"create_only\": false,\n            \"properties\": null,\n            \"template\": \"cloud-init-meta.tpl\",\n            \"when\": [\n                \"create\",\n                \"copy\"\n            ]\n        },\n        \"/var/lib/cloud/seed/nocloud-net/network-config\": {\n            \"create_only\": false,\n            \"properties\": null,\n            \"template\": \"cloud-init-network.tpl\",\n            \"when\": [\n                \"create\",\n                \"copy\"\n            ]\n        },\n        \"/var/lib/cloud/seed/nocloud-net/user-data\": {\n            \"create_only\": false,\n            \"properties\": {\n                \"default\": \"#cloud-config\\n{}\\n\"\n            },\n            \"template\": \"cloud-init-user.tpl\",\n            \"when\": [\n                \"create\",\n                \"copy\"\n            ]\n        },\n        \"/var/lib/cloud/seed/nocloud-net/vendor-data\": {\n            \"create_only\": false,\n            \"properties\": {\n                \"default\": \"#cloud-config\\n{}\\n\"\n            },\n            \"template\": \"cloud-init-vendor.tpl\",\n            \"when\": [\n                \"create\",\n                \"copy\"\n            ]\n        }\n    }\n}).then(response => {\n    console.log(response);\n})  Response  {\n\n}",
            "title": "Replace"
        }
    ]
}