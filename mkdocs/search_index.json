{
    "docs": [
        {
            "location": "/",
            "text": "A Node.js LXD client which uses your local instance of LXD and \nlxc query\n to manage your local or remote LXD servers.\n\n\nYou must be using >= LXD 2.17\n\n\nInstall\n\n\nRequire this package with npm using the following command:\n\n\n$ npm i lxc-query\n\n\n\n\nUsage\n\n\nEssentially you can do any LXD operation with the single \nlxc.query\n method, or you can use the helper methods (see side menu).\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\nrest method\n\n\nstring\n\n\ne.g GET, POST, DELETE, PUT, PATCH\n\n\nGET\n\n\n\n\n\n\npayload\n\n\nobject | json string\n\n\nRest json payload\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nPre-resolve mutation function\n\n\n\n\n\n\n\n\n\n\nconst lxc = require('lxc-query')\n\nlxc.query('remote:/1.0', 'GET', {}).then(response => {\n    console.log(response)\n})\n\n\n\n\nCheck out the LXD \nRESTapi\n, for more information. \n\n\nContributing\n\n\nPlease see \nCONTRIBUTING\n for details.\n\n\nCredits\n\n\n\n\nLawrence Cherone\n\n\nAll Contributors\n\n\n\n\nLicense\n\n\nThe MIT License (MIT). Please see \nLicense File\n for more information.",
            "title": "Home"
        },
        {
            "location": "/#install",
            "text": "Require this package with npm using the following command:  $ npm i lxc-query",
            "title": "Install"
        },
        {
            "location": "/#usage",
            "text": "Essentially you can do any LXD operation with the single  lxc.query  method, or you can use the helper methods (see side menu).  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:    rest method  string  e.g GET, POST, DELETE, PUT, PATCH  GET    payload  object | json string  Rest json payload     mutator  function  Pre-resolve mutation function      const lxc = require('lxc-query')\n\nlxc.query('remote:/1.0', 'GET', {}).then(response => {\n    console.log(response)\n})  Check out the LXD  RESTapi , for more information.",
            "title": "Usage"
        },
        {
            "location": "/#contributing",
            "text": "Please see  CONTRIBUTING  for details.",
            "title": "Contributing"
        },
        {
            "location": "/#credits",
            "text": "Lawrence Cherone  All Contributors",
            "title": "Credits"
        },
        {
            "location": "/#license",
            "text": "The MIT License (MIT). Please see  License File  for more information.",
            "title": "License"
        },
        {
            "location": "/server/",
            "text": "Server\n\n\nHelper methods for server.\n\n\nInfo\n\n\nGet server information.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\n\n\nlxc.info('local:').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    api_extensions: [\n        'storage_zfs_remove_snapshots',\n        'container_host_shutdown_timeout',\n        'container_stop_priority',\n        'container_syscall_filtering',\n        'auth_pki',\n        'container_last_used_at',\n        'etag',\n        'patch',\n        'usb_devices',\n        'https_allowed_credentials',\n        'image_compression_algorithm',\n        'directory_manipulation',\n        'container_cpu_time',\n        'storage_zfs_use_refquota',\n        'storage_lvm_mount_options',\n        'network',\n        'profile_usedby',\n        'container_push',\n        'container_exec_recording',\n        'certificate_update',\n        'container_exec_signal_handling',\n        'gpu_devices',\n        'container_image_properties',\n        'migration_progress',\n        'id_map',\n        'network_firewall_filtering',\n        'network_routes',\n        'storage',\n        'file_delete',\n        'file_append',\n        'network_dhcp_expiry',\n        'storage_lvm_vg_rename',\n        'storage_lvm_thinpool_rename',\n        'network_vlan',\n        'image_create_aliases',\n        'container_stateless_copy',\n        'container_only_migration',\n        'storage_zfs_clone_copy',\n        'unix_device_rename',\n        'storage_lvm_use_thinpool',\n        'storage_rsync_bwlimit',\n        'network_vxlan_interface',\n        'storage_btrfs_mount_options',\n        'entity_description',\n        'image_force_refresh',\n        'storage_lvm_lv_resizing',\n        'id_map_base',\n        'file_symlinks',\n        'container_push_target',\n        'network_vlan_physical',\n        'storage_images_delete',\n        'container_edit_metadata',\n        'container_snapshot_stateful_migration',\n        'storage_driver_ceph',\n        'storage_ceph_user_name',\n        'resource_limits',\n        'storage_volatile_initial_source',\n        'storage_ceph_force_osd_reuse',\n        'storage_block_filesystem_btrfs',\n        'resources',\n        'kernel_limits',\n        'storage_api_volume_rename',\n        'macaroon_authentication',\n        'network_sriov',\n        'console',\n        'restrict_devlxd',\n        'migration_pre_copy',\n        'infiniband',\n        'maas_network',\n        'devlxd_events',\n        'proxy',\n        'network_dhcp_gateway',\n        'file_get_symlink',\n        'network_leases',\n        'unix_device_hotplug',\n        'storage_api_local_volume_handling',\n        'operation_description',\n        'clustering',\n        'event_lifecycle',\n        'storage_api_remote_volume_handling',\n        'nvidia_runtime'\n    ],\n    api_status: 'stable',\n    api_version: '1.0',\n    auth: 'trusted',\n    auth_methods: [\n        'tls'\n    ],\n    config: {},\n    environment: {\n        addresses: [],\n        architectures: [\n            'x86_64',\n            'i686'\n        ],\n        certificate: '-----BEGIN CERTIFICATE-----Snip-----END CERTIFICATE-----\\n',\n        certificate_fingerprint: 'dc32c2ec49a7a234762fc4be670e7e72f8d156a1w0cf1a1d216e9abcc594f61d',\n        driver: 'lxc',\n        driver_version: '3.0.0',\n        kernel: 'Linux',\n        kernel_architecture: 'x86_64',\n        kernel_version: '4.13.0-38-generic',\n        server: 'lxd',\n        server_clustered: false,\n        server_name: 'my-lxd-server',\n        server_pid: 906,\n        server_version: '3.0.0',\n        storage: 'zfs',\n        storage_version: '1'\n    },\n    public: false\n}\n\n\n\n\nReplace\n\n\nReplaces the server configuration or other properties.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nThe server options\n\n\n\n\n\n\n\n\n\n\nReplaces any existing config with the provided one.\n\n\nlxc.replace('remote:', {\n    \"config\": {\n        \"core.trust_password\": \"my-new-password\",\n        \"core.https_address\": \"[::]:8443\"\n    }\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nUpdate\n\n\nUpdates the server configuration or other properties.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nThe server options\n\n\n\n\n\n\n\n\n\n\nUpdates only the listed keys, rest remain intact.\n\n\nlxc.update('remote:', {\n    \"config\": {\n        \"core.trust_password\": \"my-new-password\",\n        \"core.https_address\": \"[::]:8443\"\n    }\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nRemotes\n\n\nGet currently defined remotes. (only works with local:)\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nNone\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlxc.server.remotes().then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n[\n    'images',\n    'local',\n    'ubuntu',\n    'ubuntu-daily'\n]",
            "title": "Server"
        },
        {
            "location": "/server/#server",
            "text": "Helper methods for server.",
            "title": "Server"
        },
        {
            "location": "/server/#info",
            "text": "Get server information.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:     lxc.info('local:').then(response => {\n    console.log(response)\n})  Response  {\n    api_extensions: [\n        'storage_zfs_remove_snapshots',\n        'container_host_shutdown_timeout',\n        'container_stop_priority',\n        'container_syscall_filtering',\n        'auth_pki',\n        'container_last_used_at',\n        'etag',\n        'patch',\n        'usb_devices',\n        'https_allowed_credentials',\n        'image_compression_algorithm',\n        'directory_manipulation',\n        'container_cpu_time',\n        'storage_zfs_use_refquota',\n        'storage_lvm_mount_options',\n        'network',\n        'profile_usedby',\n        'container_push',\n        'container_exec_recording',\n        'certificate_update',\n        'container_exec_signal_handling',\n        'gpu_devices',\n        'container_image_properties',\n        'migration_progress',\n        'id_map',\n        'network_firewall_filtering',\n        'network_routes',\n        'storage',\n        'file_delete',\n        'file_append',\n        'network_dhcp_expiry',\n        'storage_lvm_vg_rename',\n        'storage_lvm_thinpool_rename',\n        'network_vlan',\n        'image_create_aliases',\n        'container_stateless_copy',\n        'container_only_migration',\n        'storage_zfs_clone_copy',\n        'unix_device_rename',\n        'storage_lvm_use_thinpool',\n        'storage_rsync_bwlimit',\n        'network_vxlan_interface',\n        'storage_btrfs_mount_options',\n        'entity_description',\n        'image_force_refresh',\n        'storage_lvm_lv_resizing',\n        'id_map_base',\n        'file_symlinks',\n        'container_push_target',\n        'network_vlan_physical',\n        'storage_images_delete',\n        'container_edit_metadata',\n        'container_snapshot_stateful_migration',\n        'storage_driver_ceph',\n        'storage_ceph_user_name',\n        'resource_limits',\n        'storage_volatile_initial_source',\n        'storage_ceph_force_osd_reuse',\n        'storage_block_filesystem_btrfs',\n        'resources',\n        'kernel_limits',\n        'storage_api_volume_rename',\n        'macaroon_authentication',\n        'network_sriov',\n        'console',\n        'restrict_devlxd',\n        'migration_pre_copy',\n        'infiniband',\n        'maas_network',\n        'devlxd_events',\n        'proxy',\n        'network_dhcp_gateway',\n        'file_get_symlink',\n        'network_leases',\n        'unix_device_hotplug',\n        'storage_api_local_volume_handling',\n        'operation_description',\n        'clustering',\n        'event_lifecycle',\n        'storage_api_remote_volume_handling',\n        'nvidia_runtime'\n    ],\n    api_status: 'stable',\n    api_version: '1.0',\n    auth: 'trusted',\n    auth_methods: [\n        'tls'\n    ],\n    config: {},\n    environment: {\n        addresses: [],\n        architectures: [\n            'x86_64',\n            'i686'\n        ],\n        certificate: '-----BEGIN CERTIFICATE-----Snip-----END CERTIFICATE-----\\n',\n        certificate_fingerprint: 'dc32c2ec49a7a234762fc4be670e7e72f8d156a1w0cf1a1d216e9abcc594f61d',\n        driver: 'lxc',\n        driver_version: '3.0.0',\n        kernel: 'Linux',\n        kernel_architecture: 'x86_64',\n        kernel_version: '4.13.0-38-generic',\n        server: 'lxd',\n        server_clustered: false,\n        server_name: 'my-lxd-server',\n        server_pid: 906,\n        server_version: '3.0.0',\n        storage: 'zfs',\n        storage_version: '1'\n    },\n    public: false\n}",
            "title": "Info"
        },
        {
            "location": "/server/#replace",
            "text": "Replaces the server configuration or other properties.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:    options  object  The server options      Replaces any existing config with the provided one.  lxc.replace('remote:', {\n    \"config\": {\n        \"core.trust_password\": \"my-new-password\",\n        \"core.https_address\": \"[::]:8443\"\n    }\n}).then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Replace"
        },
        {
            "location": "/server/#update",
            "text": "Updates the server configuration or other properties.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:    options  object  The server options      Updates only the listed keys, rest remain intact.  lxc.update('remote:', {\n    \"config\": {\n        \"core.trust_password\": \"my-new-password\",\n        \"core.https_address\": \"[::]:8443\"\n    }\n}).then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Update"
        },
        {
            "location": "/server/#remotes",
            "text": "Get currently defined remotes. (only works with local:)  Parameters & Call     Parameter  Type  Description  Default      None        lxc.server.remotes().then(response => {\n    console.log(response)\n})  Response  [\n    'images',\n    'local',\n    'ubuntu',\n    'ubuntu-daily'\n]",
            "title": "Remotes"
        },
        {
            "location": "/containers/",
            "text": "Containers\n\n\nHelper methods for container operations.\n\n\nList\n\n\nList containers on remote.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n// apply no mutation to the response\nlxc.containers.list('local:').then(response => {\n    // [ '/1.0/containers/my-container' ]\n    console.log(response)\n})\n\n// apply stripEndpoint on response\nlxc.containers.list('local:', response => lxc.containers.stripEndpoint(response)).then(response => {\n    // [ 'my-container' ]\n    console.log(response)\n})\n\n// or you could write your own\nlxc.containers.list('local:', response => {\n    let ret = []\n    response.forEach(value => {\n      ret.push(value.replace(lxc.containers.baseEndpoint + '/', ''))\n    })\n    return ret\n}).then(response => {\n    // [ 'my-container' ]\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n[ \n    '/1.0/containers/my-container'\n]\n\n\n\n\nGet State\n\n\nGet the state of a container on remote.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nThe container name\n\n\n\n\n\n\n\n\n\n\nlxc.containers.getState('local:', 'container-name').then(response => {\n    console.log(response);\n})\n\n\n\n\nResponse\n\n\n{\n    \"cpu\": {\n        \"usage\": 15159435138\n    },\n    \"disk\": {},\n    \"memory\": {\n        \"swap_usage\": 0,\n        \"swap_usage_peak\": 0,\n        \"usage\": 239001600,\n        \"usage_peak\": 314175488\n    },\n    \"network\": {\n        \"eth0\": {\n            \"addresses\": [\n                {\n                    \"address\": \"10.189.110.190\",\n                    \"family\": \"inet\",\n                    \"netmask\": \"24\",\n                    \"scope\": \"global\"\n                },\n                {\n                    \"address\": \"fe80::216:3eff:fefb:890a\",\n                    \"family\": \"inet6\",\n                    \"netmask\": \"64\",\n                    \"scope\": \"link\"\n                }\n            ],\n            \"counters\": {\n                \"bytes_received\": 26351929,\n                \"bytes_sent\": 706569,\n                \"packets_received\": 18810,\n                \"packets_sent\": 10095\n            },\n            \"host_name\": \"vethQGS6S6\",\n            \"hwaddr\": \"00:16:3e:fb:89:0a\",\n            \"mtu\": 1500,\n            \"state\": \"up\",\n            \"type\": \"broadcast\"\n        },\n        \"lo\": {\n            \"addresses\": [\n                {\n                    \"address\": \"127.0.0.1\",\n                    \"family\": \"inet\",\n                    \"netmask\": \"8\",\n                    \"scope\": \"local\"\n                },\n                {\n                    \"address\": \"::1\",\n                    \"family\": \"inet6\",\n                    \"netmask\": \"128\",\n                    \"scope\": \"local\"\n                }\n            ],\n            \"counters\": {\n                \"bytes_received\": 0,\n                \"bytes_sent\": 0,\n                \"packets_received\": 0,\n                \"packets_sent\": 0\n            },\n            \"host_name\": \"\",\n            \"hwaddr\": \"\",\n            \"mtu\": 65536,\n            \"state\": \"up\",\n            \"type\": \"loopback\"\n        }\n    },\n    \"pid\": 7156,\n    \"processes\": 30,\n    \"status\": \"Running\",\n    \"status_code\": 103\n}\n\n\n\n\nSet State\n\n\nSet the state of a container on remote, this allows for more flexibility then \ncalling the (start, stop, restart, freeze, unfreeze) methods below as you can set the options parameter.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nThe container name\n\n\n\n\n\n\n\n\noptions\n\n\nobject | json\n\n\nContainer state options\n\n\n\n\n\n\n\n\n\n\nlxc.containers.setState ('local:', 'container-name',  {\n    \"action\": \"stop\",  # State change action (stop, start, restart, freeze or unfreeze)\n    \"timeout\": 30,     # A timeout after which the state change is considered as failed\n    \"force\": true,     # Force the state change (currently only valid for stop and restart where it means killing the container)\n    \"stateful\": true   # Whether to store or restore runtime state before stopping or startiong (only valid for stop and start, defaults to false)\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    class: 'task',\n    created_at: '2018-04-08T16:37:36.511708398Z',\n    description: '[Stopping, Starting, Restarting, Freezing, Unfreezing] container',\n    err: '',\n    id: '4850b25b-3a9a-4666-acf6-9f2b4c25a236',\n    may_cancel: false,\n    metadata: null,\n    resources: {\n        containers: [\n            '/1.0/containers/my-container'\n        ]\n    },\n    status: 'Running',\n    status_code: 103,\n    updated_at: '2018-04-08T16:37:36.511708398Z'\n}\n\n\n\n\nCreate\n\n\nCreate container on remote.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nThe container options\n\n\n\n\n\n\n\n\n\n\nFull container options can be found here: \nhttps://github.com/lxc/lxd/blob/master/doc/rest-api.md#post-1\n\n\nlxc.containers.create('local:', {\n    \"name\": \"my-new-container\",\n    \"architecture\": \"x86_64\",\n    \"profiles\": [\"default\"],\n    \"ephemeral\": true,\n    \"config\": { \"limits.cpu\": \"2\" },\n    \"devices\": {},\n    \"source\": {\n        \"type\": \"image\",\n        \"fingerprint\": \"be7cec7c9489\"\n    }\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    \"class\": \"task\",\n    \"created_at\": \"2018-04-08T22:49:33.892947111Z\",\n    \"description\": \"Creating container\",\n    \"err\": \"\",\n    \"id\": \"cfd9cd81-a651-4b9b-bd89-4667cc51ad4b\",\n    \"may_cancel\": false,\n    \"metadata\": null,\n    \"resources\": {\n        \"containers\": [\n            \"/1.0/containers/my-new-container\"\n        ]\n    },\n    \"status\": \"Running\",\n    \"status_code\": 103,\n    \"updated_at\": \"2018-04-08T22:49:33.892947111Z\"\n}\n\n\n\n\nStart\n\n\nStart container on remote.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nThe container name\n\n\n\n\n\n\n\n\n\n\nlxc.containers.start('local:', 'container-name').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    class: 'task',\n    created_at: '2018-04-08T16:37:36.511708398Z',\n    description: 'Starting container',\n    err: '',\n    id: '4850b25b-3a9a-4666-acf6-9f2b4c25a236',\n    may_cancel: false,\n    metadata: null,\n    resources: {\n        containers: [\n            '/1.0/containers/my-container'\n        ]\n    },\n    status: 'Running',\n    status_code: 103,\n    updated_at: '2018-04-08T16:37:36.511708398Z'\n}\n\n\n\n\nStop\n\n\nStop container on remote.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nThe container name\n\n\n\n\n\n\n\n\n\n\nlxc.containers.stop('local:', 'container-name').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    class: 'task',\n    created_at: '2018-04-08T16:37:36.511708398Z',\n    description: 'Stopping container',\n    err: '',\n    id: '4850b25b-3a9a-4666-acf6-9f2b4c25a236',\n    may_cancel: false,\n    metadata: null,\n    resources: {\n        containers: [\n            '/1.0/containers/my-container'\n        ]\n    },\n    status: 'Running',\n    status_code: 103,\n    updated_at: '2018-04-08T16:37:36.511708398Z'\n}\n\n\n\n\nRestart\n\n\nRestart container on remote.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nThe container name\n\n\n\n\n\n\n\n\n\n\nlxc.containers.restart('local:', 'container-name').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    class: 'task',\n    created_at: '2018-04-08T16:37:36.511708398Z',\n    description: 'Restarting container',\n    err: '',\n    id: '4850b25b-3a9a-4666-acf6-9f2b4c25a236',\n    may_cancel: false,\n    metadata: null,\n    resources: {\n        containers: [\n            '/1.0/containers/my-container'\n        ]\n    },\n    status: 'Running',\n    status_code: 103,\n    updated_at: '2018-04-08T16:37:36.511708398Z'\n}\n\n\n\n\nFreeze\n\n\nFreeze container on remote.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nThe container name\n\n\n\n\n\n\n\n\n\n\nlxc.containers.freeze('local:', 'container-name').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    class: 'task',\n    created_at: '2018-04-08T16:37:36.511708398Z',\n    description: 'Freezing container',\n    err: '',\n    id: '4850b25b-3a9a-4666-acf6-9f2b4c25a236',\n    may_cancel: false,\n    metadata: null,\n    resources: {\n        containers: [\n            '/1.0/containers/my-container'\n        ]\n    },\n    status: 'Running',\n    status_code: 103,\n    updated_at: '2018-04-08T16:37:36.511708398Z'\n}\n\n\n\n\nUnfreeze\n\n\nUnfreeze container on remote.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nThe container name\n\n\n\n\n\n\n\n\n\n\nlxc.containers.unfreeze('local:', 'container-name').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    class: 'task',\n    created_at: '2018-04-08T16:37:36.511708398Z',\n    description: 'Thawing container',\n    err: '',\n    id: '4850b25b-3a9a-4666-acf6-9f2b4c25a236',\n    may_cancel: false,\n    metadata: null,\n    resources: {\n        containers: [\n            '/1.0/containers/my-container'\n        ]\n    },\n    status: 'Running',\n    status_code: 103,\n    updated_at: '2018-04-08T16:37:36.511708398Z'\n}",
            "title": "Containers"
        },
        {
            "location": "/containers/#containers",
            "text": "Helper methods for container operations.",
            "title": "Containers"
        },
        {
            "location": "/containers/#list",
            "text": "List containers on remote.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:    mutator  function  Mutation function      // apply no mutation to the response\nlxc.containers.list('local:').then(response => {\n    // [ '/1.0/containers/my-container' ]\n    console.log(response)\n})\n\n// apply stripEndpoint on response\nlxc.containers.list('local:', response => lxc.containers.stripEndpoint(response)).then(response => {\n    // [ 'my-container' ]\n    console.log(response)\n})\n\n// or you could write your own\nlxc.containers.list('local:', response => {\n    let ret = []\n    response.forEach(value => {\n      ret.push(value.replace(lxc.containers.baseEndpoint + '/', ''))\n    })\n    return ret\n}).then(response => {\n    // [ 'my-container' ]\n    console.log(response)\n})  Response  [ \n    '/1.0/containers/my-container'\n]",
            "title": "List"
        },
        {
            "location": "/containers/#get-state",
            "text": "Get the state of a container on remote.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:    container  string  The container name      lxc.containers.getState('local:', 'container-name').then(response => {\n    console.log(response);\n})  Response  {\n    \"cpu\": {\n        \"usage\": 15159435138\n    },\n    \"disk\": {},\n    \"memory\": {\n        \"swap_usage\": 0,\n        \"swap_usage_peak\": 0,\n        \"usage\": 239001600,\n        \"usage_peak\": 314175488\n    },\n    \"network\": {\n        \"eth0\": {\n            \"addresses\": [\n                {\n                    \"address\": \"10.189.110.190\",\n                    \"family\": \"inet\",\n                    \"netmask\": \"24\",\n                    \"scope\": \"global\"\n                },\n                {\n                    \"address\": \"fe80::216:3eff:fefb:890a\",\n                    \"family\": \"inet6\",\n                    \"netmask\": \"64\",\n                    \"scope\": \"link\"\n                }\n            ],\n            \"counters\": {\n                \"bytes_received\": 26351929,\n                \"bytes_sent\": 706569,\n                \"packets_received\": 18810,\n                \"packets_sent\": 10095\n            },\n            \"host_name\": \"vethQGS6S6\",\n            \"hwaddr\": \"00:16:3e:fb:89:0a\",\n            \"mtu\": 1500,\n            \"state\": \"up\",\n            \"type\": \"broadcast\"\n        },\n        \"lo\": {\n            \"addresses\": [\n                {\n                    \"address\": \"127.0.0.1\",\n                    \"family\": \"inet\",\n                    \"netmask\": \"8\",\n                    \"scope\": \"local\"\n                },\n                {\n                    \"address\": \"::1\",\n                    \"family\": \"inet6\",\n                    \"netmask\": \"128\",\n                    \"scope\": \"local\"\n                }\n            ],\n            \"counters\": {\n                \"bytes_received\": 0,\n                \"bytes_sent\": 0,\n                \"packets_received\": 0,\n                \"packets_sent\": 0\n            },\n            \"host_name\": \"\",\n            \"hwaddr\": \"\",\n            \"mtu\": 65536,\n            \"state\": \"up\",\n            \"type\": \"loopback\"\n        }\n    },\n    \"pid\": 7156,\n    \"processes\": 30,\n    \"status\": \"Running\",\n    \"status_code\": 103\n}",
            "title": "Get State"
        },
        {
            "location": "/containers/#set-state",
            "text": "Set the state of a container on remote, this allows for more flexibility then \ncalling the (start, stop, restart, freeze, unfreeze) methods below as you can set the options parameter.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:    container  string  The container name     options  object | json  Container state options      lxc.containers.setState ('local:', 'container-name',  {\n    \"action\": \"stop\",  # State change action (stop, start, restart, freeze or unfreeze)\n    \"timeout\": 30,     # A timeout after which the state change is considered as failed\n    \"force\": true,     # Force the state change (currently only valid for stop and restart where it means killing the container)\n    \"stateful\": true   # Whether to store or restore runtime state before stopping or startiong (only valid for stop and start, defaults to false)\n}).then(response => {\n    console.log(response)\n})  Response  {\n    class: 'task',\n    created_at: '2018-04-08T16:37:36.511708398Z',\n    description: '[Stopping, Starting, Restarting, Freezing, Unfreezing] container',\n    err: '',\n    id: '4850b25b-3a9a-4666-acf6-9f2b4c25a236',\n    may_cancel: false,\n    metadata: null,\n    resources: {\n        containers: [\n            '/1.0/containers/my-container'\n        ]\n    },\n    status: 'Running',\n    status_code: 103,\n    updated_at: '2018-04-08T16:37:36.511708398Z'\n}",
            "title": "Set State"
        },
        {
            "location": "/containers/#create",
            "text": "Create container on remote.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:    options  object  The container options      Full container options can be found here:  https://github.com/lxc/lxd/blob/master/doc/rest-api.md#post-1  lxc.containers.create('local:', {\n    \"name\": \"my-new-container\",\n    \"architecture\": \"x86_64\",\n    \"profiles\": [\"default\"],\n    \"ephemeral\": true,\n    \"config\": { \"limits.cpu\": \"2\" },\n    \"devices\": {},\n    \"source\": {\n        \"type\": \"image\",\n        \"fingerprint\": \"be7cec7c9489\"\n    }\n}).then(response => {\n    console.log(response)\n})  Response  {\n    \"class\": \"task\",\n    \"created_at\": \"2018-04-08T22:49:33.892947111Z\",\n    \"description\": \"Creating container\",\n    \"err\": \"\",\n    \"id\": \"cfd9cd81-a651-4b9b-bd89-4667cc51ad4b\",\n    \"may_cancel\": false,\n    \"metadata\": null,\n    \"resources\": {\n        \"containers\": [\n            \"/1.0/containers/my-new-container\"\n        ]\n    },\n    \"status\": \"Running\",\n    \"status_code\": 103,\n    \"updated_at\": \"2018-04-08T22:49:33.892947111Z\"\n}",
            "title": "Create"
        },
        {
            "location": "/containers/#start",
            "text": "Start container on remote.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:    container  string  The container name      lxc.containers.start('local:', 'container-name').then(response => {\n    console.log(response)\n})  Response  {\n    class: 'task',\n    created_at: '2018-04-08T16:37:36.511708398Z',\n    description: 'Starting container',\n    err: '',\n    id: '4850b25b-3a9a-4666-acf6-9f2b4c25a236',\n    may_cancel: false,\n    metadata: null,\n    resources: {\n        containers: [\n            '/1.0/containers/my-container'\n        ]\n    },\n    status: 'Running',\n    status_code: 103,\n    updated_at: '2018-04-08T16:37:36.511708398Z'\n}",
            "title": "Start"
        },
        {
            "location": "/containers/#stop",
            "text": "Stop container on remote.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:    container  string  The container name      lxc.containers.stop('local:', 'container-name').then(response => {\n    console.log(response)\n})  Response  {\n    class: 'task',\n    created_at: '2018-04-08T16:37:36.511708398Z',\n    description: 'Stopping container',\n    err: '',\n    id: '4850b25b-3a9a-4666-acf6-9f2b4c25a236',\n    may_cancel: false,\n    metadata: null,\n    resources: {\n        containers: [\n            '/1.0/containers/my-container'\n        ]\n    },\n    status: 'Running',\n    status_code: 103,\n    updated_at: '2018-04-08T16:37:36.511708398Z'\n}",
            "title": "Stop"
        },
        {
            "location": "/containers/#restart",
            "text": "Restart container on remote.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:    container  string  The container name      lxc.containers.restart('local:', 'container-name').then(response => {\n    console.log(response)\n})  Response  {\n    class: 'task',\n    created_at: '2018-04-08T16:37:36.511708398Z',\n    description: 'Restarting container',\n    err: '',\n    id: '4850b25b-3a9a-4666-acf6-9f2b4c25a236',\n    may_cancel: false,\n    metadata: null,\n    resources: {\n        containers: [\n            '/1.0/containers/my-container'\n        ]\n    },\n    status: 'Running',\n    status_code: 103,\n    updated_at: '2018-04-08T16:37:36.511708398Z'\n}",
            "title": "Restart"
        },
        {
            "location": "/containers/#freeze",
            "text": "Freeze container on remote.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:    container  string  The container name      lxc.containers.freeze('local:', 'container-name').then(response => {\n    console.log(response)\n})  Response  {\n    class: 'task',\n    created_at: '2018-04-08T16:37:36.511708398Z',\n    description: 'Freezing container',\n    err: '',\n    id: '4850b25b-3a9a-4666-acf6-9f2b4c25a236',\n    may_cancel: false,\n    metadata: null,\n    resources: {\n        containers: [\n            '/1.0/containers/my-container'\n        ]\n    },\n    status: 'Running',\n    status_code: 103,\n    updated_at: '2018-04-08T16:37:36.511708398Z'\n}",
            "title": "Freeze"
        },
        {
            "location": "/containers/#unfreeze",
            "text": "Unfreeze container on remote.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:    container  string  The container name      lxc.containers.unfreeze('local:', 'container-name').then(response => {\n    console.log(response)\n})  Response  {\n    class: 'task',\n    created_at: '2018-04-08T16:37:36.511708398Z',\n    description: 'Thawing container',\n    err: '',\n    id: '4850b25b-3a9a-4666-acf6-9f2b4c25a236',\n    may_cancel: false,\n    metadata: null,\n    resources: {\n        containers: [\n            '/1.0/containers/my-container'\n        ]\n    },\n    status: 'Running',\n    status_code: 103,\n    updated_at: '2018-04-08T16:37:36.511708398Z'\n}",
            "title": "Unfreeze"
        },
        {
            "location": "/snapshots/",
            "text": "Snapshots\n\n\nHelper methods for snapshots.\n\n\nList\n\n\nList container snapshots on remote.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.containers.snapshots.list('local:', 'my-container').then(response => {\n    console.log(response)\n})\n\n// or apply stripEndpoint on response\nlxc.containers.snapshots.list('local:', 'my-container', response => lxc.containers.snapshots.stripEndpoint(response)).then(response => {\n    // [ 'my-snapshot' ]\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n[\n    \"/1.0/containers/my-container/snapshots/my-snapshot\"\n]\n\n\n\n\nInfo\n\n\nGet container snapshot information on remote.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nsnapshot\n\n\nstring\n\n\nSnapshot name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.containers.snapshots.info('local:', 'my-container', 'my-container (April 10, 2018 6:53 PM)').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    \"architecture\": \"x86_64\",\n    \"config\": {\n        \"image.architecture\": \"amd64\",\n        \"image.description\": \"ubuntu 16.04 LTS amd64 (release) (20180306)\",\n        \"image.label\": \"release\",\n        \"image.os\": \"ubuntu\",\n        \"image.release\": \"xenial\",\n        \"image.serial\": \"20180306\",\n        \"image.version\": \"16.04\",\n        \"volatile.base_image\": \"c5bbef7f4e1c19f0104fd4ub862b2e54x095d894765c75c6d72775f1d98135ec\",\n        \"volatile.eth0.hwaddr\": \"00:16:3e:24:39:ee\",\n        \"volatile.eth0.name\": \"eth0\",\n        \"volatile.idmap.base\": \"0\",\n        \"volatile.idmap.next\": \"[{\\\"Isuid\\\":true,\\\"Isgid\\\":false,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536},{\\\"Isuid\\\":false,\\\"Isgid\\\":true,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536}]\",\n        \"volatile.last_state.idmap\": \"[{\\\"Isuid\\\":true,\\\"Isgid\\\":false,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536},{\\\"Isuid\\\":false,\\\"Isgid\\\":true,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536}]\",\n        \"volatile.last_state.power\": \"STOPPED\"\n    },\n    \"created_at\": \"2018-04-10T17:53:44Z\",\n    \"devices\": {},\n    \"ephemeral\": false,\n    \"expanded_config\": {\n        \"boot.autostart\": \"0\",\n        \"image.architecture\": \"amd64\",\n        \"image.description\": \"ubuntu 16.04 LTS amd64 (release) (20180306)\",\n        \"image.label\": \"release\",\n        \"image.os\": \"ubuntu\",\n        \"image.release\": \"xenial\",\n        \"image.serial\": \"20180306\",\n        \"image.version\": \"16.04\",\n        \"limits.cpu\": \"1\",\n        \"limits.cpu.allowance\": \"90%\",\n        \"limits.cpu.priority\": \"9\",\n        \"limits.disk.priority\": \"9\",\n        \"limits.memory\": \"1056MB\",\n        \"limits.memory.enforce\": \"hard\",\n        \"limits.memory.swap\": \"1\",\n        \"limits.memory.swap.priority\": \"5\",\n        \"limits.network.priority\": \"9\",\n        \"limits.processes\": \"14100\",\n        \"security.nesting\": \"0\",\n        \"security.privileged\": \"0\",\n        \"volatile.base_image\": \"c5bbef7f4e1c19f0104fd49b862b2e549095d894765c75c6d72775f1d98185ec\",\n        \"volatile.eth0.hwaddr\": \"00:16:3e:24:39:ee\",\n        \"volatile.eth0.name\": \"eth0\",\n        \"volatile.idmap.base\": \"0\",\n        \"volatile.idmap.next\": \"[{\\\"Isuid\\\":true,\\\"Isgid\\\":false,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536},{\\\"Isuid\\\":false,\\\"Isgid\\\":true,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536}]\",\n        \"volatile.last_state.idmap\": \"[{\\\"Isuid\\\":true,\\\"Isgid\\\":false,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536},{\\\"Isuid\\\":false,\\\"Isgid\\\":true,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536}]\",\n        \"volatile.last_state.power\": \"STOPPED\"\n    },\n    \"expanded_devices\": {\n        \"eth0\": {\n            \"nictype\": \"bridged\",\n            \"parent\": \"lxdbr0\",\n            \"type\": \"nic\"\n        },\n        \"root\": {\n            \"path\": \"/\",\n            \"pool\": \"default\",\n            \"type\": \"disk\"\n        }\n    },\n    \"last_used_at\": \"1970-01-01T00:00:00Z\",\n    \"name\": \"my-container/my-container (April 10, 2018 6:53 PM)\",\n    \"profiles\": [\n        \"default\"\n    ],\n    \"stateful\": false\n}\n\n\n\n\nCreate\n\n\nCreate container snapshot on remote.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nSnapshot options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.containers.snapshots.create('local:', 'my-container', {\n    \"name\": \"my-snapshot\",\n    \"stateful\": true\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    \"class\": \"task\",\n    \"created_at\": \"2018-04-09T17:57:48.19705024Z\",\n    \"description\": \"Snapshotting container\",\n    \"err\": \"\",\n    \"id\": \"5db401c7-8d31-4110-aa15-0c6398a36cdb\",\n    \"may_cancel\": false,\n    \"metadata\": null,\n    \"resources\": {\n        \"containers\": [\n            \"/1.0/containers/my-container\"\n        ]\n    },\n    \"status\": \"Running\",\n    \"status_code\": 103,\n    \"updated_at\": \"2018-04-09T17:57:48.19705024Z\"\n}\n\n\n\n\nRename\n\n\nRename container snapshot on remote.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nsnapshot\n\n\nstring\n\n\nSnapshot name\n\n\n\n\n\n\n\n\nnewname\n\n\nstring\n\n\nNew snapshot name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.containers.snapshots.rename('local:', 'my-container', 'my-snapshot-name', 'new-snapshot-name').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    \"class\": \"task\",\n    \"created_at\": \"2018-04-10T19:17:15.517952676+01:00\",\n    \"err\": \"\",\n    \"id\": \"1863b8ce-b3d5-4a35-87bc-959eafbb106d\",\n    \"may_cancel\": false,\n    \"metadata\": null,\n    \"resources\": {\n        \"containers\": [\n            \"/1.0/containers/my-container\"\n        ]\n    },\n    \"status\": \"Running\",\n    \"status_code\": 103,\n    \"updated_at\": \"2018-04-10T19:17:15.517952676+01:00\"\n}\n\n\n\n\nDelete\n\n\nDelete container snapshot on remote.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nsnapshot\n\n\nstring\n\n\nSnapshot name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.containers.snapshots.delete('local:', 'my-container', 'my-snapshot-name').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    class: 'task',\n    created_at: '2018-04-10T20:23:56.80835635+01:00',\n    err: '',\n    id: 'd1a9df55-5748-40ff-a0e3-09e0096f278b',\n    may_cancel: false,\n    metadata: null,\n    resources: {\n        containers: ['/1.0/containers/my-container/my-snapshot']\n    },\n    status: 'Running',\n    status_code: 103,\n    updated_at: '2018-04-10T20:23:56.80835635+01:00'\n}",
            "title": "Snapshots"
        },
        {
            "location": "/snapshots/#snapshots",
            "text": "Helper methods for snapshots.",
            "title": "Snapshots"
        },
        {
            "location": "/snapshots/#list",
            "text": "List container snapshots on remote.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:    container  string  Container name     mutator  function  Mutation function      lxc.containers.snapshots.list('local:', 'my-container').then(response => {\n    console.log(response)\n})\n\n// or apply stripEndpoint on response\nlxc.containers.snapshots.list('local:', 'my-container', response => lxc.containers.snapshots.stripEndpoint(response)).then(response => {\n    // [ 'my-snapshot' ]\n    console.log(response)\n})  Response  [\n    \"/1.0/containers/my-container/snapshots/my-snapshot\"\n]",
            "title": "List"
        },
        {
            "location": "/snapshots/#info",
            "text": "Get container snapshot information on remote.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:    container  string  Container name     snapshot  string  Snapshot name     mutator  function  Mutation function      lxc.containers.snapshots.info('local:', 'my-container', 'my-container (April 10, 2018 6:53 PM)').then(response => {\n    console.log(response)\n})  Response  {\n    \"architecture\": \"x86_64\",\n    \"config\": {\n        \"image.architecture\": \"amd64\",\n        \"image.description\": \"ubuntu 16.04 LTS amd64 (release) (20180306)\",\n        \"image.label\": \"release\",\n        \"image.os\": \"ubuntu\",\n        \"image.release\": \"xenial\",\n        \"image.serial\": \"20180306\",\n        \"image.version\": \"16.04\",\n        \"volatile.base_image\": \"c5bbef7f4e1c19f0104fd4ub862b2e54x095d894765c75c6d72775f1d98135ec\",\n        \"volatile.eth0.hwaddr\": \"00:16:3e:24:39:ee\",\n        \"volatile.eth0.name\": \"eth0\",\n        \"volatile.idmap.base\": \"0\",\n        \"volatile.idmap.next\": \"[{\\\"Isuid\\\":true,\\\"Isgid\\\":false,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536},{\\\"Isuid\\\":false,\\\"Isgid\\\":true,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536}]\",\n        \"volatile.last_state.idmap\": \"[{\\\"Isuid\\\":true,\\\"Isgid\\\":false,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536},{\\\"Isuid\\\":false,\\\"Isgid\\\":true,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536}]\",\n        \"volatile.last_state.power\": \"STOPPED\"\n    },\n    \"created_at\": \"2018-04-10T17:53:44Z\",\n    \"devices\": {},\n    \"ephemeral\": false,\n    \"expanded_config\": {\n        \"boot.autostart\": \"0\",\n        \"image.architecture\": \"amd64\",\n        \"image.description\": \"ubuntu 16.04 LTS amd64 (release) (20180306)\",\n        \"image.label\": \"release\",\n        \"image.os\": \"ubuntu\",\n        \"image.release\": \"xenial\",\n        \"image.serial\": \"20180306\",\n        \"image.version\": \"16.04\",\n        \"limits.cpu\": \"1\",\n        \"limits.cpu.allowance\": \"90%\",\n        \"limits.cpu.priority\": \"9\",\n        \"limits.disk.priority\": \"9\",\n        \"limits.memory\": \"1056MB\",\n        \"limits.memory.enforce\": \"hard\",\n        \"limits.memory.swap\": \"1\",\n        \"limits.memory.swap.priority\": \"5\",\n        \"limits.network.priority\": \"9\",\n        \"limits.processes\": \"14100\",\n        \"security.nesting\": \"0\",\n        \"security.privileged\": \"0\",\n        \"volatile.base_image\": \"c5bbef7f4e1c19f0104fd49b862b2e549095d894765c75c6d72775f1d98185ec\",\n        \"volatile.eth0.hwaddr\": \"00:16:3e:24:39:ee\",\n        \"volatile.eth0.name\": \"eth0\",\n        \"volatile.idmap.base\": \"0\",\n        \"volatile.idmap.next\": \"[{\\\"Isuid\\\":true,\\\"Isgid\\\":false,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536},{\\\"Isuid\\\":false,\\\"Isgid\\\":true,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536}]\",\n        \"volatile.last_state.idmap\": \"[{\\\"Isuid\\\":true,\\\"Isgid\\\":false,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536},{\\\"Isuid\\\":false,\\\"Isgid\\\":true,\\\"Hostid\\\":165536,\\\"Nsid\\\":0,\\\"Maprange\\\":65536}]\",\n        \"volatile.last_state.power\": \"STOPPED\"\n    },\n    \"expanded_devices\": {\n        \"eth0\": {\n            \"nictype\": \"bridged\",\n            \"parent\": \"lxdbr0\",\n            \"type\": \"nic\"\n        },\n        \"root\": {\n            \"path\": \"/\",\n            \"pool\": \"default\",\n            \"type\": \"disk\"\n        }\n    },\n    \"last_used_at\": \"1970-01-01T00:00:00Z\",\n    \"name\": \"my-container/my-container (April 10, 2018 6:53 PM)\",\n    \"profiles\": [\n        \"default\"\n    ],\n    \"stateful\": false\n}",
            "title": "Info"
        },
        {
            "location": "/snapshots/#create",
            "text": "Create container snapshot on remote.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:    container  string  Container name     options  object  Snapshot options     mutator  function  Mutation function      lxc.containers.snapshots.create('local:', 'my-container', {\n    \"name\": \"my-snapshot\",\n    \"stateful\": true\n}).then(response => {\n    console.log(response)\n})  Response  {\n    \"class\": \"task\",\n    \"created_at\": \"2018-04-09T17:57:48.19705024Z\",\n    \"description\": \"Snapshotting container\",\n    \"err\": \"\",\n    \"id\": \"5db401c7-8d31-4110-aa15-0c6398a36cdb\",\n    \"may_cancel\": false,\n    \"metadata\": null,\n    \"resources\": {\n        \"containers\": [\n            \"/1.0/containers/my-container\"\n        ]\n    },\n    \"status\": \"Running\",\n    \"status_code\": 103,\n    \"updated_at\": \"2018-04-09T17:57:48.19705024Z\"\n}",
            "title": "Create"
        },
        {
            "location": "/snapshots/#rename",
            "text": "Rename container snapshot on remote.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:    container  string  Container name     snapshot  string  Snapshot name     newname  string  New snapshot name     mutator  function  Mutation function      lxc.containers.snapshots.rename('local:', 'my-container', 'my-snapshot-name', 'new-snapshot-name').then(response => {\n    console.log(response)\n})  Response  {\n    \"class\": \"task\",\n    \"created_at\": \"2018-04-10T19:17:15.517952676+01:00\",\n    \"err\": \"\",\n    \"id\": \"1863b8ce-b3d5-4a35-87bc-959eafbb106d\",\n    \"may_cancel\": false,\n    \"metadata\": null,\n    \"resources\": {\n        \"containers\": [\n            \"/1.0/containers/my-container\"\n        ]\n    },\n    \"status\": \"Running\",\n    \"status_code\": 103,\n    \"updated_at\": \"2018-04-10T19:17:15.517952676+01:00\"\n}",
            "title": "Rename"
        },
        {
            "location": "/snapshots/#delete",
            "text": "Delete container snapshot on remote.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:    container  string  Container name     snapshot  string  Snapshot name     mutator  function  Mutation function      lxc.containers.snapshots.delete('local:', 'my-container', 'my-snapshot-name').then(response => {\n    console.log(response)\n})  Response  {\n    class: 'task',\n    created_at: '2018-04-10T20:23:56.80835635+01:00',\n    err: '',\n    id: 'd1a9df55-5748-40ff-a0e3-09e0096f278b',\n    may_cancel: false,\n    metadata: null,\n    resources: {\n        containers: ['/1.0/containers/my-container/my-snapshot']\n    },\n    status: 'Running',\n    status_code: 103,\n    updated_at: '2018-04-10T20:23:56.80835635+01:00'\n}",
            "title": "Delete"
        },
        {
            "location": "/images/",
            "text": "Images\n\n\nHelper methods for image operations.\n\n\nList\n\n\nList images on remote.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.images.list('local:').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n[\n    \"/1.0/images/be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a\"\n]\n\n\n\n\nInfo\n\n\nGet image information.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\nfingerprint\n\n\nstring\n\n\nImage fingerprint\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.images.info('local:', 'be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    \"aliases\": [],\n    \"architecture\": \"x86_64\",\n    \"auto_update\": true,\n    \"cached\": true,\n    \"created_at\": \"2018-04-05T00:00:00Z\",\n    \"expires_at\": \"2021-04-21T00:00:00Z\",\n    \"filename\": \"ubuntu-16.04-server-cloudimg-amd64-lxd.tar.xz\",\n    \"fingerprint\": \"be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a\",\n    \"last_used_at\": \"2018-04-08T22:49:34Z\",\n    \"properties\": {\n        \"architecture\": \"amd64\",\n        \"description\": \"ubuntu 16.04 LTS amd64 (release) (20180405)\",\n        \"label\": \"release\",\n        \"os\": \"ubuntu\",\n        \"release\": \"xenial\",\n        \"serial\": \"20180405\",\n        \"version\": \"16.04\"\n    },\n    \"public\": false,\n    \"size\": 163857160,\n    \"update_source\": {\n        \"alias\": \"16.04\",\n        \"certificate\": \"\",\n        \"protocol\": \"simplestreams\",\n        \"server\": \"https://cloud-images.ubuntu.com/releases\"\n    },\n    \"uploaded_at\": \"2018-04-08T15:41:08Z\"\n}\n\n\n\n\nReplace\n\n\nReplace image properties, update information and visibility.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\nfingerprint\n\n\nstring\n\n\nImage fingerprint\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nImages options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.images.replace('local:', 'be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a', {\n    \"auto_update\": true,\n    \"properties\": {\n        \"architecture\": \"x86_64\",\n        \"description\": \"Ubuntu 16.04 LTS server (20160201)\",\n        \"os\": \"ubuntu\",\n        \"release\": \"trusty\"\n    },\n    \"public\": true,\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nUpdate\n\n\nUpdate image properties, update information and visibility.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\nfingerprint\n\n\nstring\n\n\nImage fingerprint\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nImages options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.images.update('local:', 'be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a', {\n    \"auto_update\": true,\n    \"properties\": {\n        \"architecture\": \"x86_64\",\n        \"description\": \"Ubuntu 16.04 LTS server (20160201)\",\n        \"os\": \"ubuntu\",\n        \"release\": \"trusty\"\n    },\n    \"public\": true,\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nDelete\n\n\nDelete an image on remote.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\nfingerprint\n\n\nstring\n\n\nImage fingerprint\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.images.delete('local:', 'be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}",
            "title": "Images"
        },
        {
            "location": "/images/#images",
            "text": "Helper methods for image operations.",
            "title": "Images"
        },
        {
            "location": "/images/#list",
            "text": "List images on remote.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:    mutator  function  Mutation function      lxc.images.list('local:').then(response => {\n    console.log(response)\n})  Response  [\n    \"/1.0/images/be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a\"\n]",
            "title": "List"
        },
        {
            "location": "/images/#info",
            "text": "Get image information.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:    fingerprint  string  Image fingerprint     mutator  function  Mutation function      lxc.images.info('local:', 'be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a').then(response => {\n    console.log(response)\n})  Response  {\n    \"aliases\": [],\n    \"architecture\": \"x86_64\",\n    \"auto_update\": true,\n    \"cached\": true,\n    \"created_at\": \"2018-04-05T00:00:00Z\",\n    \"expires_at\": \"2021-04-21T00:00:00Z\",\n    \"filename\": \"ubuntu-16.04-server-cloudimg-amd64-lxd.tar.xz\",\n    \"fingerprint\": \"be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a\",\n    \"last_used_at\": \"2018-04-08T22:49:34Z\",\n    \"properties\": {\n        \"architecture\": \"amd64\",\n        \"description\": \"ubuntu 16.04 LTS amd64 (release) (20180405)\",\n        \"label\": \"release\",\n        \"os\": \"ubuntu\",\n        \"release\": \"xenial\",\n        \"serial\": \"20180405\",\n        \"version\": \"16.04\"\n    },\n    \"public\": false,\n    \"size\": 163857160,\n    \"update_source\": {\n        \"alias\": \"16.04\",\n        \"certificate\": \"\",\n        \"protocol\": \"simplestreams\",\n        \"server\": \"https://cloud-images.ubuntu.com/releases\"\n    },\n    \"uploaded_at\": \"2018-04-08T15:41:08Z\"\n}",
            "title": "Info"
        },
        {
            "location": "/images/#replace",
            "text": "Replace image properties, update information and visibility.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:    fingerprint  string  Image fingerprint     options  object  Images options     mutator  function  Mutation function      lxc.images.replace('local:', 'be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a', {\n    \"auto_update\": true,\n    \"properties\": {\n        \"architecture\": \"x86_64\",\n        \"description\": \"Ubuntu 16.04 LTS server (20160201)\",\n        \"os\": \"ubuntu\",\n        \"release\": \"trusty\"\n    },\n    \"public\": true,\n}).then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Replace"
        },
        {
            "location": "/images/#update",
            "text": "Update image properties, update information and visibility.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:    fingerprint  string  Image fingerprint     options  object  Images options     mutator  function  Mutation function      lxc.images.update('local:', 'be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a', {\n    \"auto_update\": true,\n    \"properties\": {\n        \"architecture\": \"x86_64\",\n        \"description\": \"Ubuntu 16.04 LTS server (20160201)\",\n        \"os\": \"ubuntu\",\n        \"release\": \"trusty\"\n    },\n    \"public\": true,\n}).then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Update"
        },
        {
            "location": "/images/#delete",
            "text": "Delete an image on remote.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:    fingerprint  string  Image fingerprint     mutator  function  Mutation function      lxc.images.delete('local:', 'be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a').then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Delete"
        },
        {
            "location": "/aliases/",
            "text": "Aliases\n\n\nHelper methods for alias operations.\n\n\nList\n\n\nList aliases on remote.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.images.aliases.list('local:').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n[\n    \"/1.0/images/aliases/alias-name\"\n]\n\n\n\n\nInfo\n\n\nGet image alias information.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\nname\n\n\nstring\n\n\nAlias name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.images.aliases.info('local:', 'alias-name').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n    \"description\": \"The alias description\",\n    \"name\": \"alias-name\",\n    \"target\": \"<image fingerprint>\"\n}\n\n\n\n\nCreate\n\n\nGet image alias information.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nAlias options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.images.aliases.create('local:', {\n    \"description\": \"The alias description\",\n    \"target\": \"<image fingerprint>\",\n    \"name\": \"alias-name\"\n}).then(response => {\n    console.log(response);\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nReplace\n\n\nReplace alias target or description.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\nname\n\n\nstring\n\n\nAlias name\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nAlias options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.images.aliases.replace('local:', 'alias-name', {\n    \"description\": \"New description\",\n    \"target\": \"<image fingerprint>\"\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nUpdate\n\n\nUpdate alias target or description.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\nname\n\n\nstring\n\n\nAlias name\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nImages options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.images.aliases.update('local:', 'alias-name', {\n    \"description\": \"New description\",\n    \"target\": \"<image fingerprint>\"\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nRename\n\n\nUpdate alias target or description.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\nname\n\n\nstring\n\n\nAlias name\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nImages options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.images.aliases.rename('local:', 'alias-name', {\n    \"name\": \"new-name\"\n}).then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}\n\n\n\n\nDelete\n\n\nDelete an alias on remote.\n\n\nParameters & Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal:\n\n\n\n\n\n\nname\n\n\nname\n\n\nAlias name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.images.aliases.delete('local:', 'alias-name').then(response => {\n    console.log(response)\n})\n\n\n\n\nResponse\n\n\n{\n\n}",
            "title": "Aliases"
        },
        {
            "location": "/aliases/#aliases",
            "text": "Helper methods for alias operations.",
            "title": "Aliases"
        },
        {
            "location": "/aliases/#list",
            "text": "List aliases on remote.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:    mutator  function  Mutation function      lxc.images.aliases.list('local:').then(response => {\n    console.log(response)\n})  Response  [\n    \"/1.0/images/aliases/alias-name\"\n]",
            "title": "List"
        },
        {
            "location": "/aliases/#info",
            "text": "Get image alias information.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:    name  string  Alias name     mutator  function  Mutation function      lxc.images.aliases.info('local:', 'alias-name').then(response => {\n    console.log(response)\n})  Response  {\n    \"description\": \"The alias description\",\n    \"name\": \"alias-name\",\n    \"target\": \"<image fingerprint>\"\n}",
            "title": "Info"
        },
        {
            "location": "/aliases/#create",
            "text": "Get image alias information.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:    options  object  Alias options     mutator  function  Mutation function      lxc.images.aliases.create('local:', {\n    \"description\": \"The alias description\",\n    \"target\": \"<image fingerprint>\",\n    \"name\": \"alias-name\"\n}).then(response => {\n    console.log(response);\n})  Response  {\n\n}",
            "title": "Create"
        },
        {
            "location": "/aliases/#replace",
            "text": "Replace alias target or description.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:    name  string  Alias name     options  object  Alias options     mutator  function  Mutation function      lxc.images.aliases.replace('local:', 'alias-name', {\n    \"description\": \"New description\",\n    \"target\": \"<image fingerprint>\"\n}).then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Replace"
        },
        {
            "location": "/aliases/#update",
            "text": "Update alias target or description.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:    name  string  Alias name     options  object  Images options     mutator  function  Mutation function      lxc.images.aliases.update('local:', 'alias-name', {\n    \"description\": \"New description\",\n    \"target\": \"<image fingerprint>\"\n}).then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Update"
        },
        {
            "location": "/aliases/#rename",
            "text": "Update alias target or description.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:    name  string  Alias name     options  object  Images options     mutator  function  Mutation function      lxc.images.aliases.rename('local:', 'alias-name', {\n    \"name\": \"new-name\"\n}).then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Rename"
        },
        {
            "location": "/aliases/#delete",
            "text": "Delete an alias on remote.  Parameters & Call     Parameter  Type  Description  Default      remote  string  LXD remote  local:    name  name  Alias name     mutator  function  Mutation function      lxc.images.aliases.delete('local:', 'alias-name').then(response => {\n    console.log(response)\n})  Response  {\n\n}",
            "title": "Delete"
        }
    ]
}